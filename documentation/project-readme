# {{ metadata.project.title }}

Main website:

* {{ metadata.project.website }}

This project contains a self-contained automated system for setting up and
managing {{ metadata.project.subject }}.

It is based on [gridlinker](https://github.com/wellbehavedsoftware/gridlinker),
which provides tools to manage data and a collection of general purpose
playbooks. It uses [etcd](https://github.com/coreos/etcd) to store runtime data,
and [ansible](https://github.com/ansible/ansible) to perform deployments.

This documentation is generated automatically, so please do not modify it
directly, or your changes will likely by overwritten.

## Configuration

Most users will be provided with a copy of this software along with the relevant
configuration. If this is the case, you should be able to run commands directly,
and discover options via the built-in help.

```sh
cd {{ metadata.project.name }}
./{{ metadata.project.script }} --help
```

To set up a connection to an existing database, create `config/connections.yml`,
using the following template:

```yaml
---

{{ metadata.project.name }}:

  etcd_servers: {{ metadata.etcd.default_servers | to_json }}
  etcd_secure: "{{ metadata.etcd.default_secure }}"
  etcd_prefix: "{{ metadata.etcd.default_prefix }}"

# ex: et ts=2 filetype=yaml
```

You also need to obtain a valid certificate, along with its private key, and the
ca certificate, from the administrator. These should be placed in the following
places:

* config/{{ metadata.project.name }}-ca.cert
* config/{{ metadata.project.name }}.cert
* config/{{ metadata.project.name }}.key

To use a local etcd server, for example during development or testing or when
you are working online, use the following configuration:

```yaml
---

{{ metadata.project.name }}:

  etcd_servers: [ "localhost" ]
  etcd_secure: "no"
  etcd_prefix: "{{ metadata.etcd.default_prefix }}"

# ex: et ts=2 filetype=yaml
```

<!-- ex: noet ts=4 filetype=markdown -->
