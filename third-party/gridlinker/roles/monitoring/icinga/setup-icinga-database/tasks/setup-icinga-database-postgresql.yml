---

- name: "create ido database"
  delegate_to: "{{ icinga_database_delegate }}"
  register: "icinga_database_create_result"
  action:

    module: "postgresql_db"
    name: "{{ icinga_database_name }}"

    login_user: "ubuntu"
    login_unix_socket: "/var/run/postgresql"

- name: "set icinga_database_initialized to 'no'"
  when: "icinga_database_create_result | changed"
  update_resource:

    icinga.database_initialized: "no"

- name: "create ido user"
  delegate_to: "{{ icinga_database_delegate }}"
  action:

    module: "postgresql_user"
    name: "{{ icinga_database_username }}"

    password: "{{ icinga_database_password }}"
    db: "{{ icinga_database_name }}"

    login_user: "ubuntu"
    login_unix_socket: "/var/run/postgresql"

- name: "grant icinga database permissions"
  with_items:

    - "table"
    - "sequence"

  delegate_to: "{{ icinga_database_delegate }}"
  action:

    module: "postgresql_privs"
    role: "{{ icinga_database_username }}"
    state: "present"

    database: "{{ icinga_database_name }}"
    schema: "public"
    objs: "ALL_IN_SCHEMA"
    type: "{{ item }}"

    privs: "ALL"

    login_user: "ubuntu"
    login_unix_socket: "/var/run/postgresql"

- name: "initialize ido database"
  when: "icinga_database_initialized == 'no'"
  delegate_to: "{{ icinga_database_delegate }}"
  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    psql {{ icinga_database_name }}
      < /usr/share/icinga2-ido-pgsql/schema/pgsql.sql;

- name: "set icinga.database_initialized to 'yes'"
  update_resource:

    icinga.database_initialized: "yes"

# ex: et ts=2 filetype=yaml
