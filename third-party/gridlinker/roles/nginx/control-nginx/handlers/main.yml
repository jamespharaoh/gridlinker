---

# ---------- initctl reload

- name: "reload upstart config"
  become: "yes"
  shell: "initctl reload-configuration"

# ---------- nginx reload

- name: "set nginx.needs_reload to 'yes'"
  when: "nginx_state == 'enabled'"
  changed_when: "True"
  notify: "reload nginx"
  update_resource:

    nginx.needs_reload: "yes"

- name: "reload nginx"
  when: "nginx_state == 'enabled'"
  notify: "set nginx.needs_reload to 'no'"
  become: "yes"
  action:

    module: "service"
    name: "nginx"
    state: "reloaded"

- name: "set nginx.needs_reload to 'no'"
  changed_when: "True"
  update_resource:

    nginx.needs_reload: "no"

# ---------- nginx restart

- name: "set nginx.needs_restart to 'yes'"
  when: "nginx_state == 'enabled'"
  changed_when: "True"
  notify: "restart nginx"
  update_resource:

    nginx.needs_restart: "yes"

- name: "restart nginx"
  when: "nginx_state == 'enabled'"
  notify: "set nginx.needs_restart to 'no'"
  become: "yes"
  action:

    module: "service"
    name: "nginx"
    state: "restarted"

- name: "set nginx.needs_restart to 'no'"
  changed_when: "True"
  update_resource:

    nginx.needs_restart: "no"

# ex: et ts=2 filetype=yaml
