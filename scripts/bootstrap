#!/bin/bash

set -euf -o pipefail

trap 'pid=$(jobs -p); if test "$pid"; then kill $pid; fi' EXIT

etcd_version="3.1.0"

system_packages=(
	"build-essential"
	"curl"
	"git"
	"python"
	"python-crypto"
	"python-jinja2"
	"python-netaddr"
	"python-openssl"
	"python-paramiko"
	"python-setuptools"
	"python-yaml"
)

cd ~/datingnode-ansible

# check for existing etcd

if test -f /etc/init/etcd.conf -o -f /etc/systemd/system/etcd.service; then

	echo "Etcd already seems to be installed, aborting..." >&2

	exit 1

fi

# check for existing config

if test -f "config/overrides.yml"; then

	echo "Won't run bootstrap if config/overrides.yml exists" >&2

	exit 1

fi

# runtime configuration

hostname=$(hostname)

echo "Using hostname: $hostname"

if test "$#" -ge 1; then

	deployment_name="$1"

	echo "Using deploymentname: $deployment_name"

else

	read -p "Please specify deployment name: " deployment_name

fi

cat >config/overrides.yml <<-END
	---

	deployment_name: "${deployment_name}"

	# ex: et ts=2 filetype=yaml
END

# update all packages

echo "Updating packages" >&2

sudo apt-get update

sudo apt-get dist-upgrade -y

# install packages

echo "Installing packages" >&2

sudo apt-get install -y "${system_packages[@]}"

# setup temporary etcd

cd /tmp

if ! test -f "etcd-v${etcd_version}-linux-amd64.tar.gz"; then

	echo "Downloading etcd" >&2

	curl "https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz" \
		--progress-bar \
		--location \
		--output "etcd-v${etcd_version}-linux-amd64.tar.gz"

fi

echo "Extracting etcd" >&2
rm -rf "etcd-v${etcd_version}-linux-amd64"
tar xzf "etcd-v${etcd_version}-linux-amd64.tar.gz"
cd "etcd-v${etcd_version}-linux-amd64"

echo "Starting temporary etcd" >&2

./etcd \
	--advertise-client-urls "http://localhost:12379" \
	--listen-client-urls "http://localhost:12379" \
	--listen-peer-urls "http://localhost:12380" \
	&>/tmp/etcd.log &

etcd_pid=$!

echo "Started as PID $etcd_pid" >&2

sleep 1

# main bootstrap process

echo "Configuring temporary connection" >&2

cd ~/datingnode-ansible

cat >config/connections.yml <<-EOF
	---
	datingnode-local:

	  etcd_servers: [ "localhost" ]
	  etcd_secure: "no"
	  etcd_prefix: "/datingnode-local"
	  etcd_port: "12379"
EOF

echo "Initialising resources" >&2

scripts/create-resources "$deployment_name"

echo "Configuring devbox" >&2

./datingnode-local ansible playbook -- playbooks/devbox-bootstrap.yml

# swap from temporary to permanent etcd

echo "Exporting data from etcd" >&2

./datingnode-local etcd export --target work/etcd-bootstrap

echo "Killing temporary etcd" >&2

kill $etcd_pid

sleep 2

echo "Configuring permanent connection" >&2

cat >config/connections.yml <<-EOF
	---
	datingnode-local:
	  etcd_servers: [ "localhost" ]
	  etcd_secure: "no"
	  etcd_prefix: "/datingnode-local"
EOF

echo "Importing data to etcd" >&2

./datingnode-local etcd import --source work/etcd-bootstrap

# done

echo "Bootstrap complete" >&2

# ex: noet ts=4 filetype=sh
