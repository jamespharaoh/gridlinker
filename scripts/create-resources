#!/bin/bash

set -euf -o pipefail

if test "$#" != "1"; then
	echo "Syntax: $0 CLUSTER" >&2
	exit 1
fi

cluster="$1"
hostname="$(hostname --short)"
ip_address="$(dig +short $hostname)"
dev_user="$USER"
dev_group="$USER"

# create admin group and user

./datingnode-local resource create \
	--update-existing \
	--class "admin-group" \
	--name "admins"

./datingnode-local resource create \
	--update-existing \
	--class "admin-user" \
	--name "admin"

# create devbox

./datingnode-local resource create \
	--update-existing \
	--class "devbox" \
	--name "${hostname}" \
	--set "private.address" "$ip_address"

# create super cluster

./datingnode-local resource create \
	--update-existing \
	--class "super-cluster" \
	--name "master" \
	\
	--set "icinga.master" ""

# create deployment cluster

./datingnode-local resource create \
	--update-existing \
	--class "deployment-cluster" \
	--name "$cluster" \
	\
	--set "cluster.database_master" "$cluster-database-1" \
	--set "cluster.domain_suffix" "$cluster.datingnode.com" \
	--set "cluster.slave_reads" "yes" \
	--set "cluster.whitelist_active" "no" \
	\
	--set "ports.vhost_proxy" "80" \
	--set "ports.vhost_proxy_ssl" "443" \
	--set "ports.database" "5001" \
	--set "ports.web_application" "5003" \
	--set "ports.storage" "5004" \
	--set "ports.memcache" "5005" \
	\
	--set "app.debug_visible" "yes" \
	--set "app.show_adverts" "no" \
	--set "app.log_api" "yes" \
	--set "app.send_external_communications" "no" \
	--add "app.external_communication_email_white_list" "dummy" \
	--remove "app.external_communication_email_white_list" "dummy" \
	\
	--set "php.pm_max_children" "100" \
	--set "php.pm_max_spare_servers" "10" \
	--set "php.pm_min_spare_servers" "5" \
	--set "php.pm_start_servers" "10"

# create containers

./datingnode-local resource create \
	--update-existing \
	--class "database" \
	--name "$cluster-database-1" \
	--set-parent "${hostname}" \
	--index "1" \
	--set "identity.cluster" "$cluster"

./datingnode-local resource create \
	--update-existing \
	--class "web-application" \
	--name "$cluster-web-application-1" \
	--set-parent "${hostname}" \
	--index "1" \
	--set "identity.cluster" "$cluster"

./datingnode-local resource create \
	--update-existing \
	--class "vhost-proxy" \
	--name "$cluster-vhost-proxy-1" \
	--set-parent "${hostname}" \
	--index "1" \
	--set "identity.cluster" "$cluster"

./datingnode-local resource create \
	--update-existing \
	--class "memcache" \
	--name "$cluster-memcache-1" \
	--set-parent "${hostname}" \
	--index "1" \
	--set "identity.cluster" "$cluster" \
	--set "memcache.enabled" "yes"

# create icinga

./datingnode-local resource create \
	--update-existing \
	--class "icinga" \
	--name "${cluster}-icinga-1" \
	--set-parent "${hostname}"

# create directories and mount-flags

web_application="/datingnode-$cluster/$cluster-web-application-1"

for directory in \
	"$web_application" \
	"$web_application/data" \
	"$web_application/data/assets" \
; do

	sudo mkdir -p "$directory"

done

for directory in \
	"$web_application/data/assets/image-cache" \
	"$web_application/data/assets/sitemaps" \
	"$web_application/data/assets/user-data" \
	"$web_application/data/logs" \
	"$web_application/data/temp" \
; do

	sudo mkdir -p "$directory"
	sudo chown "www-data:$dev_group" "$directory"
	sudo chmod "0770" "$directory"
	sudo touch "$directory/mount-flag"

done

# ex: noet ts=4 filetype=sh
