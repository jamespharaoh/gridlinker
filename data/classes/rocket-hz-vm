---

identity:

  name: "rocket-hz-vm"
  type: "class"

class:

  namespace: "host"
  parent_namespace: "host"

  groups:

    - "rocket-hz"
    - "icinga-agents"

  references:

    - name: "super_cluster"
      type: "resource"
      value: "cluster/master"

ansible:

  ssh_host: "{{ public.address }}"
  ssh_user: "ubuntu"

ssh:

  hostnames:

    - "{{ identity.name }}"
    - "{{ public.address }}"
    - "{{ private.address }}"

ubuntu:

  system_packages:

    # remove
  
    - name: "python-dev"
      state: "absent"

    - name: "python-pip"
      state: "absent"

    - name: "resolvconf"
      state: "absent"

    # install
  
    - name: "aptitude"
      state: "present"

    - name: "bash-completion"
      state: "present"

    - name: "bridge-utils"
      state: "present"

    - name: "btrfs-tools"
      state: "present"

    - name: "colordiff"
      state: "present"

    - name: "command-not-found"
      state: "present"

    - name: "curl"
      state: "present"

    - name: "dnsutils"
      state: "present"

    - name: "git"
      state: "present"

    - name: "iotop"
      state: "present"

    - name: "libpq-dev"
      state: "present"

    - name: "man-db"
      state: "present"

    - name: "nano"
      state: "present"

    - name: "ngrep"
      state: "present"

    - name: "postgresql-client-9.3"
      state: "present"

    - name: "rsync"
      state: "present"

    - name: "super"
      state: "present"

    - name: "tcpdump"
      state: "present"

    - name: "telnet"
      state: "present"

    - name: "unzip"
      state: "present"

    - name: "wget"
      state: "present"

    - name: "whois"
      state: "present"

postfix:

  helo_name: "{{ identity_name }}.rocketware.co.uk"

icinga:

  master: "{{ super_cluster.icinga_master }}"
  authority: "rocket-icinga"
  ca_certificate: "/authority/{{ icinga_authority }}/certificate"

icinga_endpoint:

  host: "{{ identity_name }}.vpn"
  internal: "{{ identity_name }}.vpn"
  external: "{{ identity_name }}.vpn"

icinga_host:

  address: "{{ identity_name }}.vpn"

  vars:

    # ---------- misc

    - name: "disks"
      key: "Disk root"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/"

    - name: "disks"
      key: "Disk lxc"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/var/lib/lxc"

    - name: "disks"
      key: "Disk docker"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/var/lib/docker"

    # ---------- live containers

    - name: "disks"
      key: "Disk live database"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-database-{{ identity_index }}/data"

    - name: "disks"
      key: "Disk live web fast"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-web-application-{{ identity_index }}/fast"

    - name: "disks"
      key: "Disk live web big"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-web-application-{{ identity_index }}/big"

    - name: "disks"
      key: "Disk live backups"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/backups"

    # ---------- staging containers

    - name: "disks"
      key: "Disk staging database"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-database-{{ identity_index }}/data"

    - name: "disks"
      key: "Disk staging web fast"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-web-application-{{ identity_index }}/fast"

    - name: "disks"
      key: "Disk staging web big"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-web-application-{{ identity_index }}/big"

# ex: et ts=2 filetype=yaml
