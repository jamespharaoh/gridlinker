---

identity:

  name: "rocket-hz-vm"
  type: "class"

class:

  namespace: "host"
  parent_namespace: "host"

  groups:

    - "rocket-hz"

    - "icinga-core-agents"
    - "icinga-core-hosts"

  references:

    - name: "cluster"
      type: "simple"
      value: "{{ super_clusters ['master'] }}"

ansible:

  ssh_host: "{{ public.address }}"
  ssh_user: "ubuntu"

btrfs_dedupe:

  install_version: "1.1.0-{{ ubuntu_release }}"

  tasks:

    - name: "big"
      user: "root"
      schedule: "10 1 * * *"
      database_path: "/var/cache/btrfs-dedupe/big.json.gz"
      dedupe_paths:

        - "/datingnode-live/live-web-application-{{ identity_index }}/big"
        - "/datingnode-live/staging-web-application-{{ identity_index }}/big"

    - name: "docker"
      user: "root"
      schedule: "10 2 * * *"
      database_path: "/var/cache/btrfs-dedupe/docker.json.gz"
      dedupe_paths:

        - "/var/lib/docker"
        - "/var/lib/docker/btrfs/subvolumes/*"

    - name: "lxc"
      user: "root"
      schedule: "10 3 * * *"
      database_path: "/var/cache/btrfs-dedupe/docker.json.gz"
      dedupe_paths:

        - "/var/lib/lxc"
        - "/var/lib/lxc/*/rootfs"

disk_ids: {}

failover: {}

icinga_core:

  authority: "rocket-icinga"
  ca_certificate: "/authority/{{ icinga_core_authority }}/certificate"

  alt_dns:

    - "{{ identity_name }}"
    - "{{ identity_name }}.vpn"

icinga_core_agent:

  name: "{{ identity_name }}"
  host: "{{ identity_name }}.vpn"

icinga_core_host:

  address: "{{ identity_name }}.vpn"
  name: "{{ identity_name }}"
  class: "{{ identity_class }}"

  vars:

    - name: "type"
      type: "string"
      value: "virtual"

    - name: "notification_groups"
      type: "array"
      value:

        - type: "string"
          value: "admins"

    # ---------- misc

    - name: "disks"
      key: "Disk root"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/"

    - name: "disks"
      key: "Disk lxc"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/var/lib/lxc"

    - name: "disks"
      key: "Disk docker"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/var/lib/docker"

    # ---------- live containers

    - name: "disks"
      key: "Disk live database"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-database-{{ identity_index }}/data"

    - name: "disks"
      key: "Disk live web fast"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-web-application-{{ identity_index }}/fast"

    - name: "disks"
      key: "Disk live web big"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/live-web-application-{{ identity_index }}/big"

    - name: "disks"
      key: "Disk live backups"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-live/backups"

    # ---------- staging containers

    - name: "disks"
      key: "Disk staging database"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-database-{{ identity_index }}/data"

    - name: "disks"
      key: "Disk staging web fast"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-web-application-{{ identity_index }}/fast"

    - name: "disks"
      key: "Disk staging web big"
      type: "object"
      value:

        - name: "disk_partition"
          type: "string"
          value: "/datingnode-staging/staging-web-application-{{ identity_index }}/big"

postfix:

  helo_name: "{{ identity_name }}.rocketware.co.uk"

private:

  broadcast: "{{ parent.private_broadcast }}"
  gateway: "{{ parent.private_address }}"
  netmask: "{{ parent.private_netmask }}"
  netmask_bits: "{{ parent.private_netmask_bits }}"
  network: "{{ parent.private_network }}"

  hostnames:

    - "{{ identity_name }}"
    - "{{ identity_name }}.vpn"
    - "{{ identity_name }}.vpn.rocketware.co.uk"

public:

  hostnames:

    - "{{ identity_name }}.rocketware.co.uk"

python: {}
python_apt: {}
python_pip: {}

ssh:

  hostnames:

    - "{{ identity.name }}"
    - "{{ public.address }}"
    - "{{ private.address }}"

system: {}

ubuntu:

  system_packages_class:

    - name: "encfs"
      state: "present"

    - name: "libpq-dev"
      state: "present"

    - name: "lxc"
      state: "present"

    - name: "postgresql-client-9.5"
      state: "present"

# ex: et ts=2 filetype=yaml
