---

ansible_python_interpreter: "/usr/bin/env python"

cluster_instance_type_indices:

  admin: 0
  data: 1
  app: 2
  jenkins: 3

node_type_indices:

  # network: 0
  # instance: 1
  api: 2
  browser: 3
  load: 4
  web: 5
  api2: 6
  media: 7
  notifications: 8
  db_daemon: 9

  # data_network: 16
  # data_instance: 17
  mongo: 18
  rabbit: 19
  postgresql: 20
  kafka: 21
  postgresql-main: 22
  postgresql-cache: 23

cluster_zone_indices:

  a: 0
  b: 1
  c: 2
  d: 3

devops_region: "eu-west-1"
devops_bucket: "wistla-builds"

deployment: "{{ deployments [deployment_name] }}"

deployment_mode_data: "{{ deployment_modes [deployment_mode] }}"

deployment_alias: "{{
  deployments [deployment.alias]
  if 'alias' in deployment
  else deployment
}}"

deployments_by_cluster: "{{
  deployments
  | values
  | selectattr ('cluster', 'defined')
  | groupby ('cluster')
  | to_dict
}}"

dev_deployments: "{{
  deployments_by_cluster.dev
}}"

dev_deployment_names: "{{
  dev_deployments
  | map (attribute = 'name')
  | list
}}"

global_system_packages:

  - name: "apport"
    state: "absent"

  - name: "apport-symptoms"
    state: "absent"

  - name: "python-apport"
    state: "absent"

  - name: "python3-apport"
    state: "absent"

  - name: "resolvconf"
    state: "absent"

  - name: "btrfs-tools"
    state: "present"

  - name: "curl"
    state: "present"

  - name: "git"
    state: "present"

  - name: "ngrep"
    state: "present"

  - name: "super"
    state: "present"

  - name: "telnet"
    state: "present"

  - name: "wget"
    state: "present"

  - name: "whois"
    state: "present"

  - name: "zbackup"
    state: "present"

mongodb_version: "3.0.3"

vagrant_templates:

  - "template"

data_dirs: []

zone_colours:
  a: "93"
  b: "99"
  c: "105"

ubuntu_mirror: "http:/"

my_system_packages: []

ubuntu_system_packages: "{{ []
  | union (global_system_packages)
  | union (my_system_packages)
}}"

kernel:

  mirror: "http://kernel.ubuntu.com/~kernel-ppa/mainline"
  branch: "{{ kernel_versions [kernel_version].branch }}"
  version_zero: "{{ kernel_versions [kernel_version].version_zero }}"
  build: "{{ kernel_versions [kernel_version].build }}"
  type: "{{ kernel_versions [kernel_version].type }}"
  arch: "{{ kernel_versions [kernel_version].arch }}"

system:

  init: "upstart"
  reboot_on_error: "yes"

ansible_warning_lines:

  - "######################################################################"
  - "##################  THIS FILE IS MANAGED BY ANSIBLE  #################"
  - "######################################################################"
  - "#                                                                    #"
  - "#  Please do not make changes to this file, since they will be       #"
  - "#  automatically overwritten. If you need to change any values in    #"
  - "#  this file, this should be done by modifying the inputs to         #"
  - "#  ansible, by modifying the ansible scripts themselves, or by       #"
  - "#  overriding them in an unmanaged file.                             #"
  - "#                                                                    #"
  - "######################################################################"

ansible_warning_generic: "{{
  'SEP ' + ansible_warning_lines | join ('\nSEP ')
}}"

ansible_warning:

  "#": "{{ ansible_warning_generic | replace ('SEP ', '') }}"
  ";": "{{ ansible_warning_generic | replace ('SEP', ';') }}"
  "//": "{{ ansible_warning_generic | replace ('SEP', '//') }}"
  "--": "{{ ansible_warning_generic | replace ('SEP', '--') }}"

ansible_notice_lines:

  - "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
  - "%%%%%%%%%%%%%  this file is PARTIALLY managed by ansible  %%%%%%%%%%%%"
  - "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
  - "%                                                                    %"
  - "%  This file will be automatically updated by ansible, although it   %"
  - "%  should preserve local changes so long as they are included in     %"
  - "%  the template. Formatting and comments will be lost.               %"
  - "%                                                                    %"
  - "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"

ansible_notice_generic: "{{
  'SEP ' + ansible_notice_lines | join ('\nSEP ')
}}"

ansible_notice:

  "#": "{{ ansible_notice_generic | replace ('SEP', '#') }}"
  ";": "{{ ansible_notice_generic | replace ('SEP', ';') }}"
  "//": "{{ ansible_notice_generic | replace ('SEP', '//') }}"
  "--": "{{ ansible_notice_generic | replace ('SEP', '--') }}"

wistla_dist_url: "https://dist.ops.wistla.com"

nginx_build_mirror: "{{ wistla_dist_url }}/nginx"

python:

  version: "2.7.11"
  url: "{{ wistla_dist_url }}/python/{{ python_archive }}"

python_pip:

  version: "8.1.1"
  archive: "get-pip-{{ python_pip_version }}.py"
  url: "{{ wistla_dist_url }}/python/{{ python_pip_archive }}"

python_apt:

  version: "0.9.3-1"
  url: "{{ wistla_dist_url }}/python/{{ python_apt_archive }}"

etcd_url: "{{ wistla_dist_url }}/etcd/{{ etcd_archive }}"

heka_version: "0.10.0"
heka_mirror: "{{ wistla_dist_url }}/heka"

ttl_short: "30"
ttl_medium: "300"
ttl_long: "3600"

bool_native: { "yes": True, "no": False }
bool_javascript: { "yes": "true", "no": "false" }

identity:
  name: "{{ inventory_hostname }}"

SHORT_NAME: "wistla"
SHORT_TITLE: "Wistla"

local_build_name: "{{
  deployment_name if (
    deployment_mode in [ 'vagrant', 'jenkins' ]
  ) else None
}}"
local_build_id: "{{ local_build_name }}-{{ local_build_seq }}"
local_build_bucket: "wistla-builds"
local_build_target: "/builds/{{ local_build_name }}"

amazon_credentials: "{{ lookup ('file', HOME + '/work/amazon-credentials') | from_yaml }}"

default:

  dist: "https://dist.ops.wistla.com"

icinga_core:

  version: "2.4.10-12-trusty"

icinga_web_core:

  version: "2.3.2"

  hostname: "icinga.ops.wistla.com"
  security: "full"

  listen_insecure_fragment: "fragments/listen-insecure.conf"
  listen_secure_fragment: "fragments/listen-secure.conf"

  graphite_upstream: "http://graphite.ops.wistla.com"

  roles:

    admin:

      name: "admin"
      users: [ "admin" ]
      permissions: [ "*" ]

icinga_web_graphite:

  version: "9e9edc02c442f422bec0d1a6ca3bed1e2ebb9d81"

  base_url: "https://icinga.ops.wistla.com/graphite"

graphite_carbon:

  version: "0.9.15"

graphite_web:

  version: "0.9.15"

  hostname: "graphite.ops.wistla.com"
  path: "/graphite"
  mode: "nginx-site"
  security: "none"

  secret_key: "{{ cluster.graphite_web_secret_key }}"

deployment_build_secret_path: "{{
  devops_inventory_deployment_modes [deployment_mode].build_secret_path
}}"

# ex: et ts=2 filetype=yaml
