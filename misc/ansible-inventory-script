#!/usr/bin/env python

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

import argparse
import os
import sys

from wbs import lazy_property

main_path = (
	os.path.realpath (__file__))

while os.path.islink (main_path):
	main_path = os.readlink (main_path)

HOME = os.path.abspath (os.path.dirname (main_path) + "/..")

import gridlinker

METADATA = gridlinker.metadata.load (HOME)
CONNECTION = os.environ [METADATA ["environment"] ["devops_connection_name"]]

class WistlaInventory (gridlinker.Inventory):

	def load_world (self):

		super (WistlaInventory, self).load_world ()

class WistlaContext (gridlinker.GenericContext):

	@lazy_property
	def inventory (self):

		return WistlaInventory (self)

def main (args):

	parser = argparse.ArgumentParser ()
	sub_parsers = parser.add_subparsers ()

	gridlinker.ansible.tools.args (sub_parsers)

	args = parser.parse_args ([ "ansible", "inventory" ] + args)
	context = WistlaContext (HOME, CONNECTION, METADATA)

	args.func (context, args)

main (sys.argv [1:])

# ex: noet ts=4 filetype=python
