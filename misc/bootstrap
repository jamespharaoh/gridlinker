#!/bin/bash

set -euf -o pipefail
trap 'pid=$(jobs -p); if test "$pid"; then kill $pid; fi' EXIT

# check for existing etcd

if test -f /etc/init/etcd.conf; then
	echo "Etcd already seems to be installed, aborting..." >&2
	exit 1
fi

# check config file exists

cd ~/datingnode-ansible
if ! test -d config -a -f config/overrides.yml; then
	echo "Please create config/overrides.yml first" >&2
fi

# setup temporary etcd

cd /tmp
if ! test -f etcd-v2.0.11-linux-amd64.tar.gz; then
	echo "Downloading etcd" >&2
	curl -# -L https://github.com/coreos/etcd/releases/download/v2.0.11/etcd-v2.0.11-linux-amd64.tar.gz -o etcd-v2.0.11-linux-amd64.tar.gz
fi

echo "Extracting etcd" >&2
rm -rf etcd-v2.0.11-linux-amd64
tar xzf etcd-v2.0.11-linux-amd64.tar.gz
cd etcd-v2.0.11-linux-amd64

echo "Starting temporary etcd" >&2
./etcd &>/tmp/etcd.log &
etcd_pid=$!

echo "Started as PID $etcd_pid" >&2
sleep 1

# main bootstrap process

echo "Configuring temporary connection" >&2
cd ~/datingnode-ansible
cat >config/connections.yml <<-EOF
	---
	datingnode-local:
	  etcd_servers: [ "localhost" ]
	  etcd_secure: "no"
	  etcd_prefix: "/datingnode-local"
EOF

echo "Initialising resources" >&2
misc/create-resources

echo "Configuring devbox" >&2
./datingnode-local ansible playbook -- playbooks/vagrant-devbox.yml

# swap from temporary to permanent etcd

echo "Exporting data from etcd" >&2
./datingnode-local etcd export --target work/etcd-bootstrap

echo "Killing temporary etcd" >&2
kill $etcd_pid
sleep 2

echo "Configuring permanent connection" >&2
cat >config/connections.yml <<-EOF
	---
	datingnode-local:
	  etcd_servers: [ "datingnode-devbox" ]
	  etcd_secure: "no"
	  etcd_prefix: "/datingnode-local"
EOF

echo "Importing data to etcd" >&2
./datingnode-local etcd import --source work/etcd-bootstrap

# done

echo "Bootstrap complete" >&2

# ex: noet ts=4 filetype=yaml
