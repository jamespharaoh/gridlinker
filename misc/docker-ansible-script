#!/bin/bash

set -e

cd /

heading () {
	echo "" >&2
	echo "########## $1 ##########" >&2
	echo "" >&2
}

build_name="$1"

if test "$build_name" = "base"; then

	if ! test -f /etc/dnode-update-flag; then

		heading "Updating system packages"

		source /datingnode-ansible/datingnode-config

		cat <<-EOF >/etc/apt/sources.list

			deb $UBUNTU_MAIN/ trusty main restricted universe
			deb-src $UBUNTU_MAIN/ trusty main restricted universe

			deb $UBUNTU_MAIN/ trusty-updates main restricted universe
			deb-src $UBUNTU_MAIN/ trusty-updates main restricted universe

			deb $UBUNTU_SECURITY/ trusty-security main restricted universe
			deb-src $UBUNTU_SECURITY/ trusty-security main restricted universe

		EOF

		apt-get update
		apt-get dist-upgrade --yes

		touch /etc/dnode-update-flag

	fi

	if ! test -f /etc/dnode-ansible-flag; then

		heading "Installing required packages for ansible"

		apt-get install --yes aptitude python-dev python-pip rsync
		pip install paramiko PyYAML jinja2 httplib2

		touch /etc/dnode-ansible-flag

	fi

fi

heading "Copying datingnode-ansible into container"

rsync \
	--archive \
	--times \
	--verbose \
	--delete \
	--exclude ".git" \
	--include "/ansible" \
	--include "/ansible-modules" \
	--include "/ansible.cfg" \
	--include "/group_vars" \
	--include "/host_vars" \
	--include "/build-inventory" \
	--include "/misc" \
	--include "/roles" \
	--exclude "/*" \
	"/datingnode-ansible/" \
	"$HOME/datingnode-ansible/"

cd "$HOME/datingnode-ansible"

if ! test "$ANSIBLE_HOME"; then

	heading "Initialising ansible environment"

	source ansible/hacking/env-setup

fi

heading "Applying ansible build $build_name"

ansible-playbook \
	--connection "local" \
	--inventory "build-inventory" \
	--limit "$build_name-build" \
	"misc/build.yml"
