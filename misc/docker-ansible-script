#!/bin/bash

set -euf -o pipefail

export HOME="/root"

cd /

heading () {
	echo "" >&2
	echo "########## $1 ##########" >&2
	echo "" >&2
}

build_name="$1"

if test "$build_name" = "base"; then

	if ! test -f /etc/dnode-update-flag; then

		heading "Updating system packages"

		source /datingnode-ansible/config/datingnode-config

		cat <<-EOF >/etc/apt/sources.list

			deb $UBUNTU_MAIN/ trusty main restricted universe
			deb-src $UBUNTU_MAIN/ trusty main restricted universe

			deb $UBUNTU_MAIN/ trusty-updates main restricted universe
			deb-src $UBUNTU_MAIN/ trusty-updates main restricted universe

			deb $UBUNTU_SECURITY/ trusty-security main restricted universe
			deb-src $UBUNTU_SECURITY/ trusty-security main restricted universe

		EOF

		apt-get update
		apt-get dist-upgrade --yes

		touch /etc/dnode-update-flag

	fi

	if ! test -f /etc/dnode-ansible-flag; then

		heading "Installing required packages for ansible"

		apt-get install --yes aptitude python-dev python-pip rsync libffi-dev libssl-dev

		pip install --upgrade pip

		hash -d pip

		pip install paramiko pyyaml jinja2 httplib2 pycrypto pyopenssl

		touch /etc/dnode-ansible-flag

	fi

fi

heading "Copying datingnode-ansible into container"

rsync \
	--archive \
	--times \
	--verbose \
	--delete-excluded \
	--exclude ".git" \
	--include "/config/build" \
	--exclude "/config/*" \
	--include "/config" \
	--include "/data" \
	--include "/misc" \
	--include "/playbooks/build-internal.yml" \
	--include "/playbooks/config.yml" \
	--exclude "/playbooks/*" \
	--include "/playbooks" \
	--include "/roles/build" \
	--include "/roles/config" \
	--exclude "/roles/*" \
	--include "/roles" \
	--include "/third-party" \
	--exclude "/*" \
	"/datingnode-ansible/" \
	"$HOME/datingnode-ansible/"

PROJECT="$HOME/datingnode-ansible"

cd "$PROJECT"

export ANSIBLE_HOME="$PROJECT/third-party/ansible"
export ANSIBLE_CONFIG="$PROJECT/work/ansible.cfg"

export PATH="$ANSIBLE_HOME/bin:$PATH"
export PYTHONPATH="$ANSIBLE_HOME/lib"

mkdir -p work

cat >work/ansible.cfg <<-END
	[defaults]
	library = $PROJECT/third-party/ansible-modules-core:$PROJECT/third-party/ansible-modules-extras
	roles_path = $PROJECT/roles/build:$PROJECT/third-party/gridlinker/roles/miscellaneous/system
END

heading "Applying ansible build $build_name"

cp "config/build/$build_name-build" "config/build-config"

ansible-playbook \
	--connection "local" \
	--inventory "misc/build-inventory" \
	--extra-vars "@config/build-config" \
	--limit "$build_name-build" \
	"playbooks/build-internal.yml"

# ex: noet ts=4 filetype=sh
