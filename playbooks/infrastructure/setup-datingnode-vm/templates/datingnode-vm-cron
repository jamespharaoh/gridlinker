MAILTO=jimmy@rocketware.co.uk
SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

{% macro database_dump (schedule, config) %}
{{ schedule }} root source {{ config }} && /usr/local/bin/database-backup-script
{% endmacro %}

{% macro rsync_pull (schedule, remote, source, dest, options = '') %}
{{ schedule }} root rsync -a {{ remote }}:{{ source }}/ {{ dest }}/ {{ options }}
{% endmacro %}

{% macro rsync_push (schedule, remote, source, dest, options = '') %}
{{ schedule }} root rsync -a {{ source }}/ {{ remote }}:{{ dest }}/ {{ options }}
{% endmacro %}

# ==================== application crons

{% for host in [
	'secure.datingnode.com',
	'secure.datingnode.com.staging.datingnode.com',
] %}

{% for script in [
	{ 'when': '*    * * * *', 'what': 'https://localhost/cron/1_min/' },
	{ 'when': '*/5  * * * *', 'what': 'https://localhost/cron/5_min/' },
	{ 'when': '*/10 * * * *', 'what': 'https://localhost/cron/10_min/' },
	{ 'when': '*/30 * * * *', 'what': 'https://localhost/cron/30_min/' },
	{ 'when': '0    * * * *', 'what': 'https://localhost/cron/60_min/' },
	{ 'when': '0    0 * * *', 'what': 'https://localhost/cron/daily/' },
] %}

{{ script.when }} nobody curl {{ script.what }} -H 'Host: {{ host }}' -k

{% endfor %}
{% endfor %}

# ==================== disk space recovery

{% for cluster_name, cluster in clusters.items () %}

{% set master_name = cluster.cluster.vm_master %}
{% set master = hostvars [master_name] %}

{% if inventory_hostname == master_name %}

{% set data_dir = '/datingnode-' + cluster_name %}
{% set web_app_local = data_dir + '/' + cluster_name + '-web-application-' + identity_index %}

# temp files for {{ cluster_name }} on master
5 3 * * * root cd {{ web_app_local }}/fast/temp; find -mtime +2 -delete

# image cache for {{ cluster_name }} on master
10 3 * * * root cd {{ web_app_local }}/fast/image-cache; find -atime +60 -delete
15 3 * * * root cd {{ web_app_local }}/fast/image-cache; find -type d -empty -delete

{% else %}

# no disk space recovery for {{ cluster_name }} on slave

{% endif %}

{% endif %}

# ========== postgresql backups

{% for cluster_name, cluster in clusters.items () %}

{% set master_name = cluster.cluster.vm_master %}
{% set master = hostvars [master_name] %}

{% if cluster_name != 'live' %}

# no database backups for {{ cluster_name }}

{% elif inventory_hostname == master_name %}

# database backups for {{ cluster_name }} master
{{ database_dump (
	schedule = '30 1 * * *',
	config = '/etc/database-backup-config') }}
{{ rsync_push (
	schedule = '30 2 * * *',
	remote = '4474@usw-s004.rsync.net',
	source = '/datingnode-live/backups',
	dest = '/db_backup') }}

{% else %}

# database backups sync to {{ cluster_name }} slave
{{ rsync_pull (
	schedule = '30 3 * * *',
	remote = master_name + '.vpn',
	source = '/datingnode-live/backups',
	dest = '/datingnode-live/backups') }}

{% endif %}

{% endfor %}

# ================ rsync backups

{% for cluster_name, cluster in clusters.items () %}

{% set master_name = cluster.cluster.vm_master %}
{% set master = hostvars [master_name] %}

{% set data_dir = '/datingnode-' + cluster_name %}
{% set web_app_local = data_dir + '/' + cluster_name + '-web-application-' + identity_index %}
{% set web_app_remote = data_dir + '/' + cluster_name + '-web-application-' + master.identity_index %}

{% if inventory_hostname == master_name %}

{% if cluster_name == 'live' %}

# backup live to remote location
{{ rsync_push (
	schedule = '0 */2 * * *',
	remote = '4474@usw-s004.rsync.net',
	source = web_app_local + '/big/user-data',
	dest = 'datingnode/user_data') }}

{% else %}

# no backups for {{ cluster_name }}

{% endif %}

{% else %}

# pull {{ cluster_name }} from master
{{ rsync_pull (
	schedule = cluster.cluster.rsync_schedule,
	remote = master_name + '.vpn',
	source = web_app_remote + '/big/user-data',
	dest = web_app_local + '/big/user-data') }}

{% endif %}

{% endfor %}
