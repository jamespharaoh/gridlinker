{%- macro database_dump (schedule, config) -%}

	{%- print [
		schedule,
		'root',
		'source ' + config + ' && /usr/local/bin/database-backup-script',
	] | join (' ') -%}

{%- endmacro -%}

{%- macro rsync_pull (lockfile, schedule, remote, source, dest, options = '') -%}

	{%- print [
		schedule,
		'root',
		[
			'set -e',
			'exec 9>' + lockfile,
			'flock --nonblock 9 || exit 0',
			[
				'rsync --archive',
				remote + ':' + source + '/',
				dest + '/',
				options,
			] | join (' '),
			'rm ', lockfile,
		] | join ('; '),
	] | join (' ') -%}

{%- endmacro -%}

{%- macro rsync_push (lockfile, schedule, remote, source, dest, options = '') -%}

	{%- print [
		schedule,
		'root',
		[
			'set -e',
			'exec 9>' + lockfile,
			'flock --nonblock 9 || exit 0',
			[
				'rsync --archive',
				source + '/',
				remote + ':' + dest + '/',
				options,
			] | join (' '),
			'rm ', lockfile,
		] | join ('; '),
	] | join (' ') -%}

{%- endmacro -%}

MAILTO=jimmy@rocketware.co.uk
SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# ==================== application crons

{% for host in [
	'secure.datingnode.com',
	'secure.datingnode.com.staging.datingnode.com',
] %}

{% for script in [
	{ 'when': '*    * * * *', 'what': 'https://localhost/cron/1_min/' },
	{ 'when': '*/5  * * * *', 'what': 'https://localhost/cron/5_min/' },
	{ 'when': '*/10 * * * *', 'what': 'https://localhost/cron/10_min/' },
	{ 'when': '*/30 * * * *', 'what': 'https://localhost/cron/30_min/' },
	{ 'when': '0    * * * *', 'what': 'https://localhost/cron/60_min/' },
	{ 'when': '0    0 * * *', 'what': 'https://localhost/cron/daily/' },
] %}

{{ script.when }} nobody curl {{ script.what }} -H 'Host: {{ host }}' -k

{% endfor %}
{% endfor %}

# ==================== disk space recovery

{%	for cluster_unique_name in groups ['deployment-cluster'] %}
{%	set cluster = hostvars [cluster_unique_name] %}
{%	set cluster_name = cluster.identity_name %}

{%		set master_name = cluster.cluster.vm_master %}
{%		set master = hostvars ['host/' + master_name] %}

{%		set data_dir = '/datingnode-' + cluster_name %}
{%		set web_app_local = data_dir + '/' + cluster_name + '-web-application-' + identity_index %}

# temp files for {{ cluster_name }}
5 3 * * * root cd {{ web_app_local }}/fast/temp && find -mtime +1 -delete

# image cache for {{ cluster_name }}
10 3 * * * root cd {{ web_app_local }}/fast/image-cache && find -atime +30 -delete
15 3 * * * root cd {{ web_app_local }}/fast/image-cache && find -type d -empty -delete

{% 	endfor %}

# ========== postgresql backups

{%	for cluster_unique_name in groups ['deployment-cluster'] %}
{%	set cluster = hostvars [cluster_unique_name] %}
{%	set cluster_name = cluster.identity_name %}

{% set master_name = cluster.cluster.vm_master %}
{% set master = hostvars ['host/' + master_name] %}

{% if cluster_name != 'live' %}

# no database backups for {{ cluster_name }}

{% elif identity_name == master_name %}

# database backups for {{ cluster_name }} master
{{ database_dump (
	schedule = '30 1 * * *',
	config = '/etc/database-backup-config') }}
{{ rsync_push (
	lockfile = '/var/run/rsync-pull-database-' + cluster_name,
	schedule = '30 2 * * *',
	remote = '4474@usw-s004.rsync.net',
	source = '/datingnode-live/backups',
	dest = '/db_backup') }}

{% else %}

# database backups sync to {{ cluster_name }} slave
{{ rsync_pull (
	lockfile = '/var/run/rsync-push-database-' + cluster_name,
	schedule = '30 3 * * *',
	remote = identity_name + '.vpn',
	source = '/datingnode-live/backups',
	dest = '/datingnode-live/backups') }}

{% endif %}

{% endfor %}

# ================ rsync backups

{%	for cluster_unique_name in groups ['deployment-cluster'] %}
{%	set cluster = hostvars [cluster_unique_name] %}
{%	set cluster_name = cluster.identity_name %}

{% set master_name = cluster.cluster.vm_master %}
{% set master = hostvars ['host/' + master_name] %}

{% set data_dir = '/datingnode-' + cluster_name %}
{% set web_app_local = data_dir + '/' + cluster_name + '-web-application-' + identity_index %}
{% set web_app_remote = data_dir + '/' + cluster_name + '-web-application-' + master.identity_index %}

{% if identity_name == master_name %}

{% if cluster_name == 'live' %}

# backup live to remote location
{{ rsync_push (
	lockfile = '/var/run/rsync-push-user-data-' + cluster_name,
	schedule = '0 */2 * * *',
	remote = '4474@usw-s004.rsync.net',
	source = web_app_local + '/big/user-data',
	dest = 'datingnode/user_data') }}

{% else %}

# no backups for {{ cluster_name }}

{% endif %}

{% else %}

# pull {{ cluster_name }} from master
{{ rsync_pull (
	lockfile = '/var/run/rsync-pull-user-data-' + cluster_name,
	schedule = cluster.cluster.rsync_schedule,
	remote = master_name + '.vpn',
	source = web_app_remote + '/big/user-data',
	dest = web_app_local + '/big/user-data') }}

{% endif %}

{% endfor %}

# ==================== symmetric sync

{%	for cluster_unique_name in groups ['deployment-cluster'] %}
{%	set cluster = hostvars [cluster_unique_name] %}
{%	set cluster_name = cluster.identity_name %}

{% set data_dir = '/datingnode-' + cluster_name %}
{% set web_app_local = data_dir + '/' + cluster_name + '-web-application-' + identity_index %}

# sitemaps for {{ cluster_name }}

{% for host_name in groups ['rocket-hz-vm'] %}
{% if host_name != inventory_hostname %}
{% set host = hostvars [host_name] %}

{% set web_app_remote = data_dir + '/' + cluster_name + '-web-application-' + host.identity_index %}

{{ rsync_pull (
	lockfile = '/var/run/rsync-pull-sitemaps-' + cluster_name,
	schedule = cluster.cluster.rsync_schedule,
	remote = host.identity_name + '.vpn',
	source = web_app_remote + '/fast/sitemaps',
	dest = web_app_local + '/fast/sitemaps',
	options = [
		'--exclude \'*.new\'',
		'--update',
	] | join (' ')) }}

{% endif %}
{% endfor %}
{% endfor %}
