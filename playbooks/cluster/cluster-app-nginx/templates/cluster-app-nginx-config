{{ ansible_warning ['#'] }}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include {{ nginx_target }}/conf/mime.types;
	default_type application/octet-stream;

	log_format times '{{ [
		'$time_iso8601',
		'$status',
		'$body_bytes_sent',
		'$request_time',
		'$request_method',
		'$scheme://$host$request_uri',
		'$server_protocol',
		'$http_x_wistla_client_request_id',
	] | join (' ') }}';

	access_log /var/log/nginx/access.log;
	access_log /var/log/nginx/times.log times;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";
	gzip_types {{ [
		'text/html',
		'application/json',
	] | join (' ') }};

	client_max_body_size 16m;

	proxy_connect_timeout 1s;
	proxy_read_timeout 60s;
	proxy_send_timeout 60s;

	proxy_http_version 1.1;
	proxy_set_header Connection "";

# ----- upstream servers per deployment -----

{% for deployment_name in cluster.super_deployment_names %}
{% set deployment = deployments [deployment_name] %}
{% if deployment.type != 'virtual' %}

	upstream deployment-{{ deployment_name }} {

{% for zone in cluster.instance_formation.app.zones %}
{% for index in cluster.instance_formation.app.indices %}
		server {{ [
			[
				deployment.bridge_network,
				index,
				cluster_zone_indices [zone] * 64
					+ node_type_indices.load,
			] | join ('.'),
			'fail_timeout=60s;',
			'#',
			[
				deployment_name,
				zone,
				index,
			],
		] | join (' ') }}
{% endfor %}
{% endfor %}

		keepalive 32;

	}

{% endif %}
{% endfor %}

{% if cluster_name == 'test' %}

# ----- default site -----

	server {

		listen 80 default_server;
		listen 443 ssl http2 default_server;

		server_name {{ inventory_hostname }};

		ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
		ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

		location /hello {
			return 200;
		}

	}

{% endif %}

{% macro do_deployment (deployment, deployment_alias, target) %}

	# website redirect naked domain to www

	server {

		listen 80;
		listen 443 ssl http2;

		server_name {{ deployment.main_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ deployment_alias.main_domain }}.key;

		return 301 https://www.{{ deployment.main_domain }}$request_uri;

	}

	# website redirect http to https

	server {

		listen 80;

		server_name www.{{ deployment.main_domain }};

		return 301 https://www.{{ deployment.main_domain }}$request_uri;

	}

	# website

	server {

		listen 443 ssl http2;

		server_name www.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ deployment_alias.main_domain }}.key;

		add_header Strict-Transport-Security "max-age={{ 60 * 60 * 24 * 365 }}";

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /keystone {

			auth_basic "Restricted";
			auth_basic_user_file {{ nginx_target }}/conf/htpasswd;

			proxy_pass http://deployment-{{ target }}/keystone;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

{% if deployment.robots_override_main | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}
{% endif %}

	}

	# api

	server {

{% if deployment.default | default ('no') == 'yes' %}
		listen 80 default_server;
		listen 443 ssl http2 default_server;
{% else %}
		listen 80;
		listen 443 ssl http2;
{% endif %}

		server_name api.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/api.{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/api.{{ deployment_alias.main_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "api.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

	}

	# admin redirect http to https

	server {

		listen 80;

		server_name admin.{{ deployment.main_domain }};

		return 301 https://admin.{{ deployment.main_domain }}$request_uri;

	}

	# api

	server {

		listen 443 ssl http2;

		server_name admin.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/admin.{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/admin.{{ deployment_alias.main_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "admin.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

	}

	# short redirect http to https

	server {

		listen 80;

		server_name {{ deployment.short_domain }};
		server_name www.{{ deployment.short_domain }};

		return 301 https://{{ deployment.short_domain }}$request_uri;

	}

	# short

	server {

		listen 443 ssl http2;

		server_name {{ deployment.short_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ deployment_alias.short_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ deployment_alias.short_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.short_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

{% if deployment.robots_override_short | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}
{% endif %}

	}

	# assets redirect http to https

	server {

		listen 80;

		server_name {{ deployment.assets_domain }};
		server_name www.{{ deployment.assets_domain }};

		return 301 https://{{ deployment.assets_domain }}$request_uri;

	}

	# assets

	server {

		listen 443 ssl http2;

		server_name {{ deployment.assets_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ deployment_alias.assets_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ deployment_alias.assets_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

{% if deployment.robots_override_assets | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}
{% endif %}

	}

	# assets origin

	server {

		listen 80;

		server_name {{ deployment.assets_origin_domain }};

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_origin_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

{% if deployment.robots_override_assets | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}
{% endif %}

	}

{% endmacro %}

{% for deployment_name, deployment in deployments.items ()
if deployment.supercluster == supercluster_name %}

{% if deployment.type == 'shared' %}

# ----- shared deployment {{ deployment.name }} -----
#
# main domain: {{ deployment.main_domain }}
# short domain: {{ deployment.short_domain }}
# target: {{ deployment.target }}
#

{{ do_deployment (
	deployment,
	deployment,
	deployment.target) }}

{% elif deployment.type == 'alias' %}
{% set deployment_alias = deployments [deployment.alias] %}

# ----- deployment alias {{ deployment_name }} -----
#
# main domain: {{ deployment.main_domain }}
# short domain: {{ deployment.short_domain }}
#
# alias name: {{ deployment.alias }}
# main domain: {{ deployment_alias.main_domain }}
# short domain: {{ deployment_alias.short_domain }}
#

{{ do_deployment (
	deployment,
	deployment_alias,
	deployment_name) }}

{% elif deployment.type == 'simple' %}

# ----- simple deployment {{ deployment_name }} -----
#
# main domain: {{ deployment.main_domain }}
# short domain: {{ deployment.short_domain }}
#

{{ do_deployment (
	deployment,
	deployment,
	deployment_name) }}

{% endif %}
{% endfor %}

}
