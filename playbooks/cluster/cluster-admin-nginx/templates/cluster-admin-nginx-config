{{ ansible_warning ['#'] }}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include {{ nginx_target }}/conf/mime.types;
	default_type application/octet-stream;

	log_format times '{{ [
		'$time_iso8601',
		'$status',
		'$body_bytes_sent',
		'$request_time',
		'$request_method',
		'$scheme://$host$request_uri',
		'$server_protocol',
		'$http_x_wistla_client_request_id',
	] | join (' ') }}';

	access_log /var/log/nginx/access.log;
	access_log /var/log/nginx/times.log times;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";

	client_max_body_size 16m;

	# default site

	server {

		listen 80;

		server_name {{ inventory_hostname }};

		root {{ nginx_target }}/html;

	}

{% if cluster_name == 'ops' %}

{% for dev_deployment_name in dev_deployment_names %}
{% set dev_deployment = deployments [dev_deployment_name] %}

	upstream {{ dev_deployment_name }}-host {
		server {{ dev_deployment.bridge_network }}.0.1;
	}

	upstream {{ dev_deployment_name }}-load {
		server {{ dev_deployment.bridge_network }}.0.4;
		server {{ dev_deployment.bridge_network }}.1.4;
		server {{ dev_deployment.bridge_network }}.2.4;
		server {{ dev_deployment.bridge_network }}.3.4;
	}

	# website redirect to www

	server {

		listen 80;
		listen 443 ssl http2;

		server_name {{ dev_deployment.main_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.main_domain }}.key;

		return 301 https://{{ dev_deployment.web_domain }}$request_uri;

	}

	# website redirect to ssl

	server {

		listen 80;

		server_name {{ dev_deployment.web_domain }};

		return 301 https://{{ dev_deployment.web_domain }}$request_uri;

	}

	# website

	server {

		listen 443 ssl http2;

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.main_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.main_domain }}.key;

		server_name {{ dev_deployment.web_domain }};

		add_header Strict-Transport-Security "max-age={{ 60 * 60 * 24 * 365 }}";

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-load/;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

		location /keystone {
			auth_basic "Restricted";
			auth_basic_user_file {{ nginx_target }}/conf/htpasswd;
			proxy_pass http://{{ dev_deployment_name }}-load/keystone;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

	# api

	server {

		listen 80;
		listen 443 ssl http2;

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.api_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.api_domain }}.key;

		server_name {{ dev_deployment.api_domain }};

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-load/;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

	# admin redirect to ssl

	server {

		listen 80;

		server_name {{ dev_deployment.admin_domain }};

		return 301 https://{{ dev_deployment.admin_domain }}$request_uri;

	}

	# admin

	server {

		listen 443 ssl http2;

		server_name {{ dev_deployment.admin_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.admin_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.admin_domain }}.key;

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-load/;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

	# short

	server {

		listen 80;

		server_name {{ dev_deployment.short_domain }};

		return 301 https://{{ dev_deployment.short_domain }}$request_uri;

	}

	server {

		listen 443 ssl http2;

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.short_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.short_domain }}.key;

		server_name {{ dev_deployment.short_domain }};

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-load/;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

{% if 'test_domain' in dev_deployment %}

	# test

	server {

		listen 80;
		listen 443 ssl http2;

		server_name {{ dev_deployment.test_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.test_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.test_domain }}.key;

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-host/;
			proxy_set_header Host $host;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

{% endif %}

	# assets

	server {

		listen 80;
		listen 443 ssl http2;

		server_name {{ dev_deployment.assets_domain }};

		ssl_certificate {{ nginx_target }}/conf/ssl/{{ dev_deployment.assets_domain }}.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/{{ dev_deployment.assets_domain }}.key;

		location /robots.txt {
			alias {{ nginx_target }}/conf/dev-robots.txt;
		}

		location / {
			proxy_pass http://{{ dev_deployment_name }}-load/;
			proxy_set_header Host {{ dev_deployment.assets_domain }};
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

#	# assets redirect to ssl
#
#	server {
#
#
#		server_name {{ dev_deployment.assets_domain }};
#
#		return 301 https://{{ dev_deployment.assets_domain }}$request_uri;
#
#	}

{% endfor %}

	# icinga redirect to ssl

	server {

		server_name icinga.ops.wistla.com;

		listen 80;

		return 301 https://icinga.ops.wistla.com$request_uri;

	}

	# icinga ssl

	server {

		server_name icinga.ops.wistla.com;

		listen 443 ssl http2;

		ssl_certificate {{ nginx_target }}/conf/ssl/icinga.ops.wistla.com.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/icinga.ops.wistla.com.key;

		# classic ui

		location /icinga/cgi-bin {

			alias /opt/icinga/sbin;

			auth_basic "Restricted";
			auth_basic_user_file /opt/icinga2/etc/icinga2-classicui/htpasswd.users;

			fastcgi_pass unix:/var/run/fcgiwrap.socket;
			include {{ nginx_target }}/conf/fastcgi_params;
			fastcgi_param SCRIPT_FILENAME /opt/icinga/sbin/$fastcgi_script_name;
			fastcgi_param ICINGA_CGI_CONFIG /opt/icinga2/etc/icinga2-classicui/cgi.cfg;
			fastcgi_param AUTH_USER $remote_user;
			fastcgi_param REMOTE_USER $remote_user;

		}

		#location /icinga2-classicui/stylesheets {
		#	alias /opt/icinga2/etc/icinga2-classicui/stylesheets;
		#}

		location /icinga {

			alias /opt/icinga/share;

			auth_basic "Restricted";
			auth_basic_user_file /opt/icinga2/etc/icinga2-classicui/htpasswd.users;

		}

		# icinga web2 proxy to admin-a

		location /icingaweb2 {
			proxy_pass http://wistla-ops-admin-a;
			proxy_set_header Host icinga-origin.ops.wistla.com;
			proxy_set_header X-Real-IP $http_x_real_ip;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

	# icinga web 2

	server {

		server_name icinga-origin.ops.wistla.com;

		listen 80;

		location ~ ^/icingaweb2/index\.php(.*)$ {

			fastcgi_pass unix:/var/run/php5-fpm.sock;
			fastcgi_index index.php;
			include fastcgi_params;

			fastcgi_param SCRIPT_FILENAME /opt/icinga-web-2.0.0-rc1/public/index.php;
			fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;
			fastcgi_param REMOTE_USER $remote_user;
			fastcgi_param HTTPS on;

		}

		location ~ ^/icingaweb2(.+)? {

			alias /opt/icinga-web-2.0.0-rc1/public;

			index index.php;
			try_files $1 $uri $uri/ /icingaweb2/index.php$is_args$args;

		}

	}

	# jenkins redirect to ssl

	server {

		server_name jenkins.ops.wistla.com;

		listen 80;

		return 301 https://jenkins.ops.wistla.com$request_uri;

	}

	# jenkins

	server {

		server_name jenkins.ops.wistla.com;

		listen 443 ssl http2;

		ssl_certificate {{ nginx_target }}/conf/ssl/jenkins.ops.wistla.com.cert;
		ssl_certificate_key {{ nginx_target }}/conf/ssl/jenkins.ops.wistla.com.key;

		location / {
			proxy_pass http://wistla-ops-jenkins;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $http_x_real_ip;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Wistla-Entry-Region {{ region_code }};
		}

	}

{% endif %}

}
