---

- name: "create robots.txt"
  sudo: "yes"
  action:

    module: "template"
    dest: "{{ nginx_target }}/conf/dev-robots.txt"
    src: "cluster-admin-nginx-robots"

- name: "create nginx config"
  notify: "restart nginx"
  sudo: "yes"
  action:

    module: "template"
    dest: "{{ nginx_target }}/conf/nginx.conf"
    src: "cluster-admin-nginx-config"

- name: "create nginx directories"
  with_items:

    - directory: "{{ nginx_target }}/conf/ssl"
      user: "root"
      group: "root"
      mode: "0755"

    - directory: "/var/log/nginx"
      user: "www-data"
      group: "adm"
      mode: "0750"

  sudo: "yes"
  action:

    module: "file"
    name: "{{ item.directory }}"
    state: "directory"

    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"

- name: "write nginx certificates"
  with_items: "cluster.admin_certificates | default ([])"
  notify: "restart nginx"
  sudo: "yes"
  action:

    module: "template"
    dest: "{{ nginx_target }}/conf/ssl/{{ item }}.cert"
    src: "cluster-admin-ssl-bundle"

- name: "write nginx private keys"
  with_items: "cluster.admin_certificates | default ([])"
  notify: "restart nginx"
  sudo: "yes"
  action:

    module: "copy"
    dest: "{{ nginx_target }}/conf/ssl/{{ item }}.key"

    content: "{{ lookup ('etcd', [
      '/certificate/',
      cluster_name,
      '-ssl/subjects/',
      item,
      '/current/key',
    ] | join ('')) + '\n' }}"

    mode: "0600"

- name: "write nginx htpasswd"
  sudo: "yes"
  action:

    module: "copy"
    dest: "{{ nginx_target }}/conf/htpasswd"
    src: "{{ HOME }}/security/htpasswd"

    group: "www-data"
    mode: "0640"

- meta: "flush_handlers"

- name: "set nginx.state to 'enabled'"
  when: "nginx_state == 'installed'"
  update_resource:

    nginx.state: "enabled"

# ex: et ts=2 filetype=yaml
