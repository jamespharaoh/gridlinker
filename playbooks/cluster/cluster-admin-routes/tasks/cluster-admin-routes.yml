---

- name: "create public route"
  with_items:

    - "{{ 'routes_app_' + instance_zone }}"
    - "{{ 'routes_data_' + instance_zone }}"
    - "{{ 'routes_jenkins_' + instance_zone }}"

  delegate_to: "localhost"
  environment:

    AWS_DEFAULT_REGION: "{{ amazon_region_name }}"

    AWS_ACCESS_KEY_ID: "{{ amazon_credentials [amazon_account_name].access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    AWS_SESSION_TOKEN: "{{ amazon_credentials [amazon_account_name].session_token }}"

  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    set;

    value="{{ cluster_network [item] | default ('') }}";

    if test "$value"; then

      aws ec2 delete-route
        --route-table-id "$value"
        --destination-cidr-block "0.0.0.0/0"
      || true;

      aws ec2 create-route
        --route-table-id "$value"
        --destination-cidr-block "0.0.0.0/0"
        --instance-id "{{ instance_id }}";

    fi;

- name: "create vpn route"
  delegate_to: "localhost"
  environment:

    AWS_DEFAULT_REGION: "{{ amazon_region_name }}"

    AWS_ACCESS_KEY_ID: "{{ amazon_credentials [amazon_account_name].access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    AWS_SESSION_TOKEN: "{{ amazon_credentials [amazon_account_name].session_token }}"

  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    for route_table_id in
      {{ cluster_network.routes_admin_a | default ('') }}
      {{ cluster_network.routes_admin_b | default ('') }}
      {{ cluster_network.routes_admin_c | default ('') }}
      {{ cluster_network.routes_app_a | default ('') }}
      {{ cluster_network.routes_app_b | default ('') }}
      {{ cluster_network.routes_app_c | default ('') }}
      {{ cluster_network.routes_data_a | default ('') }}
      {{ cluster_network.routes_data_b | default ('') }}
      {{ cluster_network.routes_data_c | default ('') }}
      {{ cluster_network.routes_jenkins_a | default ('') }}
      {{ cluster_network.routes_jenkins_b | default ('') }}
      {{ cluster_network.routes_jenkins_c | default ('') }}
    ; do

      {

        aws ec2 replace-route
          --route-table-id "$route_table_id"
          --destination-cidr-block "{{ vpn_network }}.0/24"
          --instance-id "{{ instance_id }}"

      } || {

        aws ec2 create-route
          --route-table-id "$route_table_id"
          --destination-cidr-block "{{ vpn_network }}.0/24"
          --instance-id "{{ instance_id }}";

      };

    done;

- name: "create vpn cluster routes"
  with_dict: "clusters"
  when: "
    item.value.supercluster_name == supercluster_name
    and item.key != cluster_name
  "
  delegate_to: "localhost"
  environment:

    AWS_DEFAULT_REGION: "{{ amazon_region_name }}"

    AWS_ACCESS_KEY_ID: "{{ amazon_credentials [amazon_account_name].access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    AWS_SESSION_TOKEN: "{{ amazon_credentials [amazon_account_name].session_token }}"

  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    for route_table_id in
      {{ cluster_network ['routes_app_' + instance_zone] | default ('') }}
      {{ cluster_network ['routes_data_' + instance_zone] | default ('') }}
      {{ cluster_network ['routes_jenkins_' + instance_zone] | default ('') }}
    ; do

      {

        aws ec2 replace-route
          --route-table-id "$route_table_id"
          --destination-cidr-block "{{ item.value.cluster_network }}.0.0/16"
          --instance-id "{{ instance_id }}"

      } || {

        aws ec2 create-route
          --route-table-id "$route_table_id"
          --destination-cidr-block "{{ item.value.cluster_network }}.0.0/16"
          --instance-id "{{ instance_id }}";

      };

    done;

# ex: et ts=2 filetype=yaml
