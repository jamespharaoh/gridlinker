{{ ansible_warning ['//'] }}

var ROOT = process.cwd ();
var config = require(ROOT + '/config/config.global');

// public urls

config.adminUrl = 'https://{{ cluster_deployment_alias.admin_domain }}';
config.apiUrl = 'https://{{ cluster_deployment_alias.api_domain }}';
config.assetsUrl = 'https://{{ cluster_deployment_alias.assets_domain }}';
config.shortUrl = 'https://{{ cluster_deployment_alias.short_domain }}';
config.webUrl = 'https://{{ cluster_deployment_alias.web_domain }}';

// test urls

config.adminTest = 'http://{{ cluster_deployment_alias.admin_domain }}';
config.apiTest = 'http://{{ cluster_deployment.api_domain }}';
config.assetsTest = 'http://{{ cluster_deployment_alias.assets_domain }}';
config.shortTest = 'http://{{ cluster_deployment.short_domain }}';
config.webTest = 'http://{{ cluster_deployment.web_domain }}';

// Database.
config.dbUrl = 'mongodb://{{ cluster_deployment_alias.name }}-mongo-{{ instance_zone }}-{{ instance_index }}:27017/wistla';

// message exchange
config.amqpOptions = {
	url: 'amqp://{{ cluster_deployment_alias.name }}-rabbit-{{ instance_zone }}-{{ instance_index }}',
};

// CORS
config.CORS = {
	origins: [

		'https://{{ cluster_deployment.admin_domain }}',
		'https://{{ cluster_deployment.api_domain }}',
		'https://{{ cluster_deployment.main_domain }}',
		'https://{{ cluster_deployment.short_domain }}',
		'https://{{ cluster_deployment.web_domain }}',

		'https://{{ cluster_deployment_alias.admin_domain }}',
		'https://{{ cluster_deployment_alias.api_domain }}',
		'https://{{ cluster_deployment_alias.main_domain }}',
		'https://{{ cluster_deployment_alias.short_domain }}',
		'https://{{ cluster_deployment_alias.web_domain }}',

	],
	credentials: true
};

{% if cluster_deployment_alias.blob_storage == 'amazon' %}

// amazon s3 blob storage
config.blobMode = 'amazon';
config.blobAmazon = {
	accessKey: '{{ amazon_accounts [cluster_name].access_key }}',
	secretKey: '{{ amazon_accounts [cluster_name].secret_key }}',
	bucketName: 'wistla-{{ cluster_deployment_alias.name }}-blobs',
	bucketPrefix: ''
};

{% else %}

// local blob storage
config.blobMode = 'local';

{% endif %}

// mailchimp
config.mailchimp = {
	listId: '{{ third_parties [cluster_name].mailchimp_unique_id }}',
	apiKey: '{{ third_parties [cluster_name].mailchimp_api_key }}',
};

// test data loader
config.loadingData = {
	email: '350477707572-gcc5pqssbhl7n29pbcs923havgbddh1e@developer.gserviceaccount.com',
	keyFile: '/config/google-service-account.key',
	cryptoKey: '{{ third_parties [cluster_name].google_maps_key }}'
};

// apple push notifications

config.applePush = {
{% if bool_native [cluster_deployment.apple_push_notifications_enabled] %}

	enabled: true,
	caCertFile: ROOT + '/config/apple-ca.cert',
	certFile: ROOT + '/config/apple-push.cert',
	keyFile: ROOT + '/config/apple-push.key',
	production: {{ bool_javascript [cluster_deployment.apple_push_notifications_production] }},

{% else %}

	enabled: false,

{% endif %}
};

{% if bool_native [cluster_deployment.emails_enabled] %}

// Enable email sends.
config.sendEmails = true;

{% endif %}

module.exports = config;

// ex: noet ts=4 filetype=javascript
