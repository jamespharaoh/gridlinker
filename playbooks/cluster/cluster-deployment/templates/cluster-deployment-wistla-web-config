{{ ansible_warning ['//'] }}

{% set cluster_deployment_security = lookup ('file',
	HOME + '/security/deployments/' + cluster_deployment_name
) | from_yaml %}

var ROOT = process.env.HOME + '/wistla-web';
var config = require(ROOT + '/config/config.global');

// public urls
config.adminUrl = 'https://{{ cluster_deployment_alias.admin_domain }}';
config.apiUrl = 'https://{{ cluster_deployment_alias.api_domain }}';
config.assetsUrl = 'https://{{ cluster_deployment_alias.assets_domain }}';
config.cmsUrl = 'https://{{ cluster_deployment_alias.assets_domain }}/cms';
config.shortUrl = 'https://{{ cluster_deployment_alias.short_domain }}';
config.staticWebUrl = 'https://{{ cluster_deployment_alias.assets_domain }}/web';
config.webUrl = 'https://{{ cluster_deployment_alias.web_domain }}';

// email
config.emailDomain = '{{ cluster_deployment.email_domain }}';

// Database.
{% if cluster_name in [ 'staging', 'production' ] %}
config.dbUrl = [
	'mongodb://{{ cluster_deployment_alias.name }}-mongo-a-4:27017/wistla-web',
	'mongodb://{{ cluster_deployment_alias.name }}-mongo-b-4:27017/wistla-web',
	'mongodb://{{ cluster_deployment_alias.name }}-mongo-c-4:27017/wistla-web',
].join (',');
config.dbOptions = {
	replSet: {
		rs_name: 'wistla-1-1',
	},
	db: {
		w: 2,
		j: false,
	},
};
{% else %}
config.dbUrl = 'mongodb://{{ cluster_deployment_alias.name }}-mongo-a-4:27017/wistla-web';
config.dbOptions = {
	db: {
		w: 1,
		j: false,
	},
};
{% endif %}

// semi-persistent storage
config.cmsImagePath = '/shared/cms-image';

// Google Maps API Key for showing office location on a map.
config.googleMapsApiKey = '{{ third_parties [cluster_name].google_maps_api_key }}';

// mailchimp
config.mailchimp = {
	listId: '{{ third_parties [cluster_name].mailchimp_unique_id }}',
	apiKey: '{{ third_parties [cluster_name].mailchimp_api_key }}',
};

{% if cluster_deployment.emails_enabled == 'yes' %}
// Enable email sends.
config.sendEmails = true;
{% endif %}

// cms content

config.cmsContent = {
	mode: 'amazon',
	bucket: 'wistla-{{ cluster_deployment_name }}-web',
	prefix: '/cms',
	key: '{{ cluster_deployment_security.web.access_key_id }}',
	secret: '{{ cluster_deployment_security.web.secret_access_key }}'
};

module.exports = config;

// ex: noet ts=4 filetype=javascript
