---

- name: "create admin per-zone dns"
  delegate_to: "localhost"
  action:

    module: "route53"
    command: "create"
    overwrite: "yes"

    zone: "{{ cluster.main_domain }}"
    record: "{{ item.1 }}.{{ item.0 }}.{{ cluster.main_domain }}"
    ttl: "60"
    type: "A"
    value: "{{ cluster.amazon_admin_ips [item.1] }}"

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  with_nested:

    - - "admin"
      - "vpn"

    - - "a"
      - "b"
      - "c"

- name: "create main misc records"
  action:

    module: "route53"
    record: "{{ item.name }}.{{ cluster.main_domain }}"
    command: "create"

    zone: "{{ cluster.main_domain }}"

    type: "{{ item.type }}"
    ttl: "{{ item.ttl }}"
    value: "{{ item.value }}"

    region: "{{ amazon_region }}"
    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  with_items: "cluster.route53_main_domain.misc_records"

- name: "create main deployment records"
  action:

    module: "route53"
    record: "{{ item.0 [item.1] }}"
    command: "create"

    zone: "{{ cluster.main_domain }}"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ app_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ app_balancer_hosted_zone_name_id }}"

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  when: "item.0.type in [ 'shared', 'simple' ]"
  with_nested:

    - "{{ cluster.deployment_names | default ([]) | dict_map (deployments) }}"
    - "cluster_dns_deployment_keys"

- name: "create assets records"
  with_items: "{{ cluster.deployment_names | default ([]) | dict_map (deployments) }}"
  when: "'assets_origin' in item"
  action:

    module: "route53"
    record: "{{ item.assets_domain }}"
    command: "create"

    zone: "{{ cluster.main_domain }}"
    overwrite: "yes"

    type: "CNAME"
    ttl: "{{ ttl_medium }}"

    value: "{{ hostvars [inventory_hostname] [
      'assets_cloudfront_' + item.name | replace ('-', '_') + '_domain'
    ] }}"

    # TODO should use zone id but can't find how to retrieve this, it seems like
    # there should be a way to do this in cloudformation but i can't see that it
    # exists currently, so in the mean time we use a CNAME instead of an alias
    # here

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

- name: "create dev deployment records"
  action:

    module: "route53"
    record: "{{ item.0 [item.1] }}"
    command: "create"

    zone: "dev.wistla.com"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ admin_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ admin_balancer_hosted_zone_name_id }}"

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  when: "
    cluster_name == 'ops'
    and '.dev.wistla.com' in item.0 [item.1]
  "

  with_nested:

    - "{{ dev_deployment_names | default ([]) | dict_map (deployments) }}"

    - - "main_domain"
      - "admin_domain"
      - "api_domain"
      - "assets_domain"
      - "web_domain"

- name: "create short deployment records"
  action:

    module: "route53"
    record: "{{ item.1 }}{{ item.0.short_domain }}"
    command: "create"

    zone: "{{ cluster.short_domain }}"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ app_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ app_balancer_hosted_zone_name_id }}"

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  when: "item.0.short_domain is defined"
  with_nested:

    - "{{ cluster.deployment_names | default ([]) | dict_map (deployments) }}"

    - - ""

- name: "create jenkins deployment record"
  action:

    module: "route53"
    record: "jenkins.ops.wistla.com"
    command: "create"

    zone: "ops.wistla.com"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ admin_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ admin_balancer_hosted_zone_name_id }}"

    aws_access_key: "{{ amazon_accounts [amazon_account].access_key }}"
    aws_secret_key: "{{ amazon_accounts [amazon_account].secret_key }}"

  when: "cluster_name == 'ops'"

# TODO dev

# ex: et ts=2 filetype=yaml
