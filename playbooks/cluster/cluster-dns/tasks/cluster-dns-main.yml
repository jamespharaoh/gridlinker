---

- name: "create main deployment records"
  action:

    module: "route53"
    record: "{{ item.0 [item.1] }}"
    command: "create"

    zone: "{{ cluster.super_domain }}"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ app_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ app_balancer_hosted_zone_name_id }}"

    identifier: "{{ cluster.amazon_region }}"
    region: "{{ cluster.amazon_region }}"

    aws_access_key: "{{ amazon_credentials [amazon_account_name].access_key }}"
    aws_secret_key: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    security_token: "{{ amazon_credentials [amazon_account_name].session_token }}"

  #when: "item.0.type in [ 'shared', 'simple' ]"
  with_nested:

    - "{{ cluster.super_deployment_names | default ([]) | dict_map (deployments) }}"
    - "cluster_dns_deployment_keys"

- name: "create short deployment records"
  action:

    module: "route53"
    record: "{{ item.1 }}{{ item.0.short_domain }}"
    command: "create"

    zone: "{{ cluster.short_domain }}"
    overwrite: "yes"

    type: "A"
    ttl: "{{ ttl_medium }}"
    value: "{{ app_balancer_hosted_zone_name }}"
    alias: "yes"
    alias_hosted_zone_id: "{{ app_balancer_hosted_zone_name_id }}"

    identifier: "{{ cluster.amazon_region }}"
    region: "{{ cluster.amazon_region }}"

    aws_access_key: "{{ amazon_credentials [amazon_account_name].access_key }}"
    aws_secret_key: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    security_token: "{{ amazon_credentials [amazon_account_name].session_token }}"

  when: "item.0.short_domain is defined"
  with_nested:

    - "{{
        cluster.super_deployment_names
        | default ([])
        | dict_map (deployments)
      }}"

    - - ""

# ex: et ts=2 filetype=yaml
