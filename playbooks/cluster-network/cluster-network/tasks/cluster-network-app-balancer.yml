---

- name: "create app balancer"
  register: "app_balancer_result"
  action:

    module: "ec2_elb_lb"
    name: "{{ cluster_name }}-app"
    state: "present"

    listeners:

      - protocol: "tcp"
        load_balancer_port: "80"
        instance_port: "8080"

      - protocol: "tcp"
        load_balancer_port: "443"
        instance_port: "8443"

    security_group_ids: "{{ security_group_id_balancer }}"

    subnets:

      - "{{ subnet_admin_a }}"
      - "{{ subnet_admin_b }}"
      - "{{ subnet_admin_c }}"

    health_check:

      ping_protocol: "http"
      ping_port: "80"
      ping_path: "/hello"
      response_timeout: "2"
      interval: "10"
      unhealthy_threshold: "2"
      healthy_threshold: "4"

    region: "{{ amazon_region_name }}"

    aws_access_key: "{{ amazon_credentials [amazon_account_name].access_key }}"
    aws_secret_key: "{{ amazon_credentials [amazon_account_name].secret_key }}"
    security_token: "{{ amazon_credentials [amazon_account_name].session_token }}"

- update_resource:

    app_balancer_hosted_zone_name: "{{ app_balancer_result.elb.canonical_hosted_zone_name }}"
    app_balancer_hosted_zone_name_id: "{{ app_balancer_result.elb.canonical_hosted_zone_name_id }}"

- name: "set app balancer proxy protocol"
  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    if test "{{ deployment_mode }}" = "vagrant"; then
      eval `cd {{ HOME }}; misc/amazon-auth {{ amazon_account_name }}`;
    fi;

    aws elb create-load-balancer-policy
      --load-balancer-name {{ cluster_name }}-app
      --policy-name proxy-protocol
      --policy-type-name ProxyProtocolPolicyType
      --policy-attributes AttributeName=ProxyProtocol,AttributeValue=true;

    aws elb set-load-balancer-policies-for-backend-server
      --load-balancer-name {{ cluster_name }}-app
      --instance-port 80
      --policy-names "[]";

    aws elb set-load-balancer-policies-for-backend-server
      --load-balancer-name {{ cluster_name }}-app
      --instance-port 443
      --policy-names "[]";

    aws elb set-load-balancer-policies-for-backend-server
      --load-balancer-name {{ cluster_name }}-app
      --instance-port 8080
      --policy-names proxy-protocol;

    aws elb set-load-balancer-policies-for-backend-server
      --load-balancer-name {{ cluster_name }}-app
      --instance-port 8443
      --policy-names proxy-protocol;

# ex: et ts=2 filetype=yaml
