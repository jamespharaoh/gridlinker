{{ ansible_warning ['//'] }}

apply Service "ping4" {

	import "generic-service"

	check_command = "ping4"

	command_endpoint = host.command_endpoint

	assign where true

}

apply Service "ssh" {

	import "generic-service"

	check_command = "ssh"

	command_endpoint = host.command_endpoint

	assign where host.vars.stature == "cluster"

}

apply Service for (disk => config in host.vars.disks) {

	import "generic-service"

	check_command = "disk"

	command_endpoint = host.vars.endpoint

	vars += config

	assign where host.vars.stature == "cluster"

}

apply Service "load" {

	import "generic-service"

	check_command = "load"

	command_endpoint = host.vars.endpoint

	assign where host.vars.stature == "cluster"

}

apply Service "procs" {

	import "generic-service"

	check_command = "procs"

	command_endpoint = host.vars.endpoint

	assign where host.vars.stature == "cluster"

}

apply Service "swap" {

	import "generic-service"

	check_command = "swap"

	command_endpoint = host.vars.endpoint

	assign where host.vars.stature == "cluster"

}

apply Service "users" {

	import "generic-service"

	check_command = "users"

	command_endpoint = host.vars.endpoint

	assign where host.vars.stature == "cluster"

}

apply Service "mail queue" {

	import "generic-service"

	check_command = "postfix-mail-queue"

	command_endpoint = host.vars.endpoint

	assign where host.vars.stature == "cluster"

}

apply Service "http" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	assign where host.vars.type in [
		"cluster-app",
		"cluster-admin",
	]

}

apply Service "https" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	vars.http_ssl = 1

	assign where (
		host.vars.type == "cluster-app" || (
			host.vars.type == "cluster-admin"
			&& host.vars.cluster == "ops"
		)
	)

}

apply Service "wistla api" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	vars.http_port = 7000
	vars.http_expect = "HTTP/1.1 404 Not Found"

	assign where host.vars.type == "node-api"

}

apply Service "wistla browser" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	vars.http_port = 3000
	vars.http_expect = "HTTP/1.1 404 Not Found"

	assign where host.vars.type == "node-browser"

}

apply Service "wistla web" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	vars.http_port = 3000

	assign where host.vars.type == "node-web"

}

apply Service "wistla load balancer" {

	import "generic-service"

	check_command = "http"

	command_endpoint = host.vars.endpoint

	vars.http_port = 80
	vars.http_expect = "HTTP/1.1 404 Not Found"

	assign where host.vars.type == "node-load"

}

apply Service "wistla mongo" {

	import "generic-service"

	check_command = "tcp"

	command_endpoint = host.vars.endpoint

	vars.tcp_port = 27017

	assign where host.vars.type == "node-mongo"

}

apply Service "wistla rabbit" {

	import "generic-service"

	check_command = "tcp"

	command_endpoint = host.vars.endpoint

	vars.tcp_port = 5672

	assign where host.vars.type == "node-rabbit"

}
