#!/bin/bash

set -euf -o pipefail

echo "-- starting postgres"

setuid postgres \
"{{ postgresql_lib }}/bin/postgres" \
	-D "{{ postgresql_data }}" &

postgresql_pid=$!

if test \
	! -f "{{ postgresql_data }}/recovery.conf" \
	-a ! -f "{{ postgresql_data }}/user-flag"
then

	echo "-- sleeping"

	sleep 5

	echo "-- creating replication user"

	setuid postgres \
	psql \
		-c "

			CREATE USER {{ postgresql_replication_user }}
			REPLICATION LOGIN
			ENCRYPTED PASSWORD '{{ postgresql_replication_password }}';

			ALTER USER postgres
			ENCRYPTED PASSWORD '{{ postgresql_master_password }}';

		"

	echo "-- creating app databases and users"

	setuid postgres \
	psql \
		-c "

			ALTER ROLE postgres
			SET search_path
			TO \"\$user\",public,gis;

			CREATE USER jimmy
			ENCRYPTED PASSWORD '{{ postgresql_user_password }}'
			SUPERUSER;

			ALTER ROLE jimmy
			SET search_path
			TO \"\$user\",public,gis;

		"

	touch "{{ postgresql_data }}/user-flag";

fi

wait $postgresql_pid
