{{ ansible_warning ['//'] }}

var ROOT = process.cwd ();
var config = require(ROOT + '/config/config.global');

// api url
config.apiUrl = 'https://{{ deployment.api_domain }}';
config.apiTest = 'http://{{ deployment.api_domain }}';

// web url
config.webUrl = 'https://{{ deployment.web_domain }}';
config.webTest = 'http://{{ deployment.web_domain }}';

// assets url
config.assetsUrl = 'https://{{ deployment.assets_domain }}';
config.assetsTest = 'http://{{ deployment.assets_domain }}';

// short url for links sent out
config.shortUrl = 'https://{{ deployment.short_domain }}';
config.shortTest = 'http://{{ deployment.short_domain }}';

// admin url
config.adminUrl = 'https://admin.{{ deployment.main_domain }}';

// Database.
config.dbUrl = 'mongodb://{{ deployment_name }}-mongo-0:27017/wistla';

// message exchange
config.amqpOptions = {
	url: 'amqp://{{ deployment_name }}-rabbit-0',
};

// CORS
config.CORS = {
	origins: [

		'https://{{ deployment.api_domain }}',
		'https://{{ deployment.main_domain }}',
		'https://{{ deployment.short_domain }}',
		'https://{{ deployment.web_domain }}',
		config.adminUrl,

		'http://{{ deployment.api_domain }}',
		'http://{{ deployment.main_domain }}',
		'http://{{ deployment.short_domain }}',
		'http://{{ deployment.web_domain }}',

	],
	credentials: true
};

{% if use_s3 == 'yes' %}

// amazon s3 blob storage
config.blobMode = 'amazon';
config.blobAmazon = {
	accessKey: '{{ amazon_accounts.test.access_key }}',
	secretKey: '{{ amazon_accounts.test.secret_key }}',
	bucketName: 'wistla-dev',
	bucketPrefix: '/{{ deployment_name }}/blobs'
};

{% else %}

// local blob storage
config.blobMode = 'local';

{% endif %}

// mailchimp
{% if 'dev' in third_parties %}
config.mailchimp = {
	listId: '{{ third_parties.dev.mailchimp_unique_id }}',
	apiKey: '{{ third_parties.dev.mailchimp_api_key }}',
};
{% else %}
config.mailchimp = {
	listId: '',
	apiKey: '',
};
{% endif %}

// test data loader
config.loadingData = {
	email: '350477707572-gcc5pqssbhl7n29pbcs923havgbddh1e@developer.gserviceaccount.com',
	keyFile: ROOT + '/config/google-service-account.key',
{% if 'dev' in third_parties %}
        cryptoKey: '{{ third_parties.dev.google_maps_key }}'
{% else %}
		cryptoKey: ''
{% endif %}
};

// apple push notifications
config.applePush = {
{% if dev_apple_push_notifications_enabled | default ('no') == 'yes' %}
	enabled: true,
	caCertFile: ROOT + '/config/apple-ca.cert',
	certFile: ROOT + '/config/apple-push.cert',
	keyFile: ROOT + '/config/apple-push.key',
	production: {{ 'true' if dev_apple_push_notifications_production == 'yes' else 'false' }},
{% else %}
	enabled: false,
{% endif %}
};

module.exports = config;

// ex: noet ts=4 filetype=javascript
