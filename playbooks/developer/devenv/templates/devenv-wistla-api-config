{{ ansible_warning ['//'] }}

{% if 'jenkins-' in deployment_name %}
{% set deployment_security = lookup ('file',
	HOME + '/security/deployments/' + deployment_name
) | from_yaml %}
{% else %}
{% set deployment_security = lookup ('file',
	HOME + '/security/deployments/dev-' + deployment_name
) | from_yaml %}
{% endif %}

var ROOT = process.cwd ();
var config = require(ROOT + '/config/config.global');

// public urls
config.adminUrl = 'https://{{ deployment.admin_domain }}';
config.apiUrl = 'https://{{ deployment.api_domain }}';
config.assetsUrl = 'https://{{ deployment.assets_domain }}';
config.shortUrl = 'https://{{ deployment.short_domain }}';
config.webUrl = 'https://{{ deployment.web_domain }}';

// test urls
config.adminTest = 'http://{{ deployment.admin_domain }}';
config.apiTest = 'http://{{ deployment.api_domain }}';
config.assetsTest = 'http://{{ deployment.assets_domain }}';
config.shortTest = 'http://{{ deployment.short_domain }}';
config.webTest = 'http://{{ deployment.web_domain }}';

// email
config.emailDomain = '{{ deployment.email_domain }}';

// Database.
config.dbUrl = 'mongodb://{{ deployment_name }}-mongo-0:27017/wistla';
config.dbOptions = {
	replSet: {
		rs_name: 'wistla-1-1',
	},
	db: {
		w: 1,
		j: false,
	},
};

// message exchange
config.amqpOptions = {
	url: 'amqp://{{ deployment_name }}-rabbit-0', // TODO deprecate this
	urls: [
{% for rabbit_name in groups ['node-rabbit-host'] %}
{% set rabbit_host = hostvars [rabbit_name] %}
{% if rabbit_host.node_index < dev_node_count.rabbit | int %}
		'amqp://{{ rabbit_name }}',
{% endif %}
{% endfor %}
	],
};

// CORS
config.CORS = {
	origins: [

		// public urls
		config.adminUrl,
		config.apiUrl,
		config.assetsUrl,
		config.shortUrl,
		config.webUrl,

		// test urls
		config.adminTest,
		config.apiTest,
		config.assetsTest,
		config.shortTest,
		config.webTest,

	],
	credentials: true
};

// blob storage
{% if dev_api_use_s3 == 'yes' %}
config.blobMode = 'amazon';
{% else %}
config.blobMode = 'local';
{% endif %}

config.blobAmazon = {
	accessKey: '{{ deployment_security.api.access_key_id }}',
	secretKey: '{{ deployment_security.api.secret_access_key }}',
{% if 'jenkins-' in deployment_name %}
	bucketName: 'wistla-dev-{{ deployment_name }}-blobs',
{% else %}
	bucketName: 'wistla-{{ deployment_name }}-blobs',
{% endif %}
	bucketPrefix: ''
};

// mailchimp
{% if 'dev' in third_parties %}
config.mailchimp = {
	listId: '{{ third_parties.dev.mailchimp_unique_id }}',
	apiKey: '{{ third_parties.dev.mailchimp_api_key }}',
};
{% else %}
config.mailchimp = {
	listId: '',
	apiKey: '',
};
{% endif %}

// test data loader
config.loadingData = {
	email: '350477707572-gcc5pqssbhl7n29pbcs923havgbddh1e@developer.gserviceaccount.com',
	keyFile: ROOT + '/config/google-service-account.key',
{% if 'dev' in third_parties %}
        cryptoKey: '{{ third_parties.dev.google_maps_key }}'
{% else %}
		cryptoKey: ''
{% endif %}
};

// Turn on longStackTraces in dev by default.
config.longStackTraces = true;

// apple push notifications
config.applePush = {
{% if dev_apple_push_notifications_enabled | default ('no') == 'yes' %}
	enabled: true,
	caCertFile: ROOT + '/config/apple-ca.cert',
	certFile: ROOT + '/config/apple-push.cert',
	keyFile: ROOT + '/config/apple-push.key',
	production: {{ 'true' if dev_apple_push_notifications_production == 'yes' else 'false' }},
{% else %}
	enabled: false,
{% endif %}
};

// Deep link url scheme for use in sending out emails.
{% if 'dev' in third_parties %}
config.urlScheme = '{{ third_parties.dev.url_scheme }}';
{% else %}
config.urlScheme = 'wistlaDev';
{% endif %}

// facebook app to use
{% if 'dev' in third_parties %}
config.authentication.facebook.appToUse = '{{ third_parties.dev.facebook_app_to_use }}';
{% else %}
config.authentication.facebook.appToUse = 'wistlaDev';
{% endif %}

// facebook app configuration options
config.authentication.facebook.apps = {
{% for key, cluster_name in {
	'wistla': 'production',
	'wistlaStaging': 'staging',
	'wistlaTest': 'test',
	'wistlaDev': 'dev',
}.items () %}
{% if 'dev' in third_parties %}
	{{ key }}: {
		appId: '{{ third_parties [cluster_name].facebook_app_id }}',
		appSecret: '{{ third_parties [cluster_name].facebook_app_secret }}',
		appAccessToken: '{{ third_parties [cluster_name].facebook_app_access_token }}'
	},
{% else %}
	{{ key }}: {
		appId: '',
		appSecret: '',
		appAccessToken: ''
	},
{% endif %}
{% endfor %}
};

module.exports = config;

// ex: noet ts=4 filetype=javascript
