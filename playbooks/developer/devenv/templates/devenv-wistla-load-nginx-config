{{ ansible_warning ['#'] }}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	# basic settings

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# logging

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# compression

	gzip on;
	gzip_disable "msie6";

	# proxy defaults

{% if dev_debug | default ('no') == 'yes' %}

	proxy_connect_timeout 5s;
	proxy_read_timeout 10m;
	proxy_next_upstream error;

{% else %}

	proxy_connect_timeout 5s;
	proxy_read_timeout 60s;
	proxy_next_upstream error;

{% endif %}

	{%- macro upstream (name, port) -%}

		{%- print '\tupstream ', name, ' {\n' -%}

		{%- for node_name in groups ['node-' + name + '-host'] -%}

			{%- set node_host = hostvars [node_name] -%}
			{%- for node_instance in range (0, dev_node_instance_count [name] | int) -%}

				{%- if node_host.node_index < dev_node_count [name] | int -%}

					{%- print
						'\t\tserver ',
						node_name,
						':',
						port + node_instance,
						' fail_timeout=30s max_fails=1;\n'
					-%}

				{%- else -%}

					{%- print
						'\t\tserver ',
						node_name,
						':',
						port + node_instance,
						' down;\n'
					-%}

				{%- endif -%}
			{%- endfor -%}

		{%- endfor -%}

		{%- print '\t}\n' -%}

	{%- endmacro -%}

	{%- print upstream ('api', 7000) + '\n' -%}
	{%- print upstream ('web', 3000) + '\n' -%}
	{%- print upstream ('browser', 3000) + '\n' -%}

	# api

	server {

		server_name {{ deployment.api_domain }};

		client_max_body_size 16m;

		location / {
			proxy_pass http://api;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

	}

	# web

	server {

		server_name {{ deployment.web_domain }};
		server_name {{ deployment.main_domain }};

		client_max_body_size 16m;

		location / {
			proxy_pass http://web;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /in {
			proxy_pass http://browser;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

	}

	# admin

	server {

		server_name {{ deployment.admin_domain }};

		root /home/ubuntu/wistla-admin;

		location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
			expires max;
			log_not_found off;
		}

		location / {
			try_files $uri /index.html;
		}

	}

	# short

	server {

		server_name {{ deployment.short_domain }};

		location / {
			proxy_pass http://browser/in/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /v/ {
			proxy_pass http://browser/in/registration/verification/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

	}

	# assets

	server {

		server_name {{ deployment.assets_domain }};
		server_name {{ deployment.assets_origin_domain }};

		expires max;

		# per-region api-managed assets

		location /1/images {
			proxy_pass http://api/images;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /1/audio {
			proxy_pass http://api/audio;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /1/video {
			proxy_pass http://api/video;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		# cms is stored in s3, or locally

		location /cms {
{% if dev_web_use_s3 == 'yes' %}
{% if 'jenkins-' in deployment_name %}
			proxy_pass http://wistla-{{ deployment_name }}-web.s3.amazonaws.com/cms;
{% else %}
			proxy_pass http://wistla-dev-{{ deployment_name }}-web.s3.amazonaws.com/cms;
{% endif %}
			proxy_http_version 1.1;
			proxy_set_header Connection "";
{% else %}
			alias /shared/cms-image;
{% endif %}
		}

		# serve up local content from projects

		location /api/emails {
			alias /home/ubuntu/content-api/emails;
		}

		location /browser/assets {
			alias /home/ubuntu/content-browser/assets;
		}

		location /browser/fonts {
			alias /home/ubuntu/content-browser/fonts;
		}

		location /common/emails/assets {
			alias /home/ubuntu/content-common/emails/assets;
		}

		location /web/assets {
			alias /home/ubuntu/content-web/assets;
		}

		location /web/videos {
			alias /home/ubuntu/content-web/videos;
		}

		location /web/fonts {
			alias /home/ubuntu/content-web/fonts;
		}

	}

}
