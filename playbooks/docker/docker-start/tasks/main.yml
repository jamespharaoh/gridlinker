---

- name: "create config dir"
  delegate_to: "host/{{ identity.parent }}"
  action:
    module: "file"
    path: "{{ data_dir }}/{{ identity.name }}/config"
    state: "directory"
  sudo: "yes"

- name: "create runtime config"
  delegate_to: "host/{{ identity.parent }}"
  action:
    module: "template"
    dest: "{{ data_dir }}/{{ identity.name }}/config/runtime-config"
    src: "runtime-config"
  sudo: "yes"

- name: "create parent config"
  delegate_to: "host/{{ identity.parent }}"
  action:
    module: "template"
    src: "parent-config"
    dest: "{{ data_dir }}/{{ identity.name }}/config/parent-config"
  sudo: "yes"

- name: "create inventory"
  delegate_to: "host/{{ identity.parent }}"
  action:
    module: "template"
    src: "ansible-inventory"
    dest: "{{ data_dir }}/{{ identity.name }}/config/inventory"
  sudo: "yes"

- name: "start container"
  delegate_to: "host/{{ identity.parent }}"
  action:
    module: "docker"
    name: "{{ start.name }}"
    state: "running"
    image: "{{ start.registry }}/{{ start.image }}"
    registry: "{{ start.registry }}"
    command: "/sbin/my_init"
    dns:
      - "{{ parent.private.address }}"
    expose: "{{ start.expose }}"
    ports: "{{ start.ports }}"
    tty: "True"
    stdin_open: "True"
    volumes: "{{ start.volumes }}"
    env: "{{ start.env }}"

#- name: "wait for connection"
#  delegate_to: "{{ identity.parent }}"
#  action:
#    module: "wait_for"
#    host: "{{ hostvars [parent].private.address }}"
#    port: "{{ item }}"
#    state: "started"
#    timeout: "10"
#  with_items: "start.wait"

# ex: et ts=2 filetype=yaml
