Short-title: Technologies
Long-title: Wistla technologies
Description: A general list of the technologies Wistla uses

Wistla's infrastructure is highly automated and designed to be scalable. The
main technologies we use are listed here. Please feel free to add anything
which is missing.

## Colaboration technologies

* [Git](https://git-scm.com/documentation) for source control, with our
[repositories hosted by github](https://github.com/wistla/).

* [Google apps](https://apps.google.co.uk/) for single-sign on and many other
services.

* [Pivotal tracker](http://www.pivotaltracker.com/) to manage our development
process.

## Service technologies

* [Node.js](https://nodejs.org/en/) for most service development.

* [Nginx](http://nginx.org/) for our main web servers.

* [PostgreSQL](http://www.postgresql.org/) for our master databases, and for our
secondary read-only search databases (WIP).

* [RabbitMQ](https://www.rabbitmq.com/) for our legacy data pipeline (possibly
will be going away soon).

* [Apache kafka](http://kafka.apache.org/) as our primary data pipeline (WIP).

* [MongoDB](https://www.mongodb.org/) for our main read-only data cache
(currently our master database).

* [LXC](https://linuxcontainers.org/) for our container processes.

## Operational technologies

* [Ubuntu Linux](http://www.ubuntu.com/) for our server operating system.

* [Amazon Web Sevices](http://aws.amazon.com/) for main hosting.

* [Ansible](http://docs.ansible.com/ansible/index.html) for deployment, along
with gridlinker (documentation pending).

* [Python](https://www.python.org/) for development of operational management
and automation.

* [SSH](http://www.openssh.com/) for various types of secure communication.

* [OpenVPN](https://openvpn.net/index.php/open-source.html) to connect our
disparate Amazon clusters, and to connect our dev environments to the hosted
clusters.

* [Icinga](https://www.icinga.org/) for our service monitoring and alerting.

* [Heka](https://hekad.readthedocs.org/) for our log file aggregation.

* [ZBackup](http://zbackup.org/) for backups and storage of container images
(WIP).

* [Etcd](https://coreos.com/etcd/) for our primary operational data store.

## Development technologies

* [Virtualbox](https://www.virtualbox.org/) for a virtual machine, with a
proposal to support [http://www.vmware.com/](VMWare) and [KVM]
(http://www.linux-kvm.org/page/Main_Page).

* [Vagrant](https://www.vagrantup.com/) to help manage our virtual dev
environments, which a proposal to drop this entirely and replace with a simple
in-house solution.

* [Locust](http://locust.io/) for our load testing framework.

## Specific AWS serices

* [EC2](https://aws.amazon.com/ec2/) for our main hosting.

* [Elastic load balancing](https://aws.amazon.com/elasticloadbalancing/) for
fault-tolerant inbound TCP termination.

* [Elastic block storage](https://aws.amazon.com/ebs/) for flexible block
devices and simple backups.

* [S3](https://aws.amazon.com/s3/) for binary object storage, and various other
types of data.

* [Cloudfront](https://aws.amazon.com/cloudfront/) for a content distribution
network and cache, although this may be phased out since HTTP2 makes it mostly
obsolete.

* [Route 53](https://aws.amazon.com/route53/) for our DNS hosting.
