Short-title: Build and deploy
Long-title: Wistla devops building and deployment instructions
Description: Instructions for creating builds and deploying them in various
	environments

## Introduction

Starting with Wistla v2, wistla is deployed to server infrastructure using
pre-built templates. These will be built regularly and automatically by Jenkins,
and they can also be built in any dev environment. They can also be deployed to
a dev environment.

A build consists of a set of images of the template containers. There are tarred
and stored into a ZBackup repository. This repository is synced to and from an
S3 bucket on each machine which needs access to it.

## Creating a build

This instructions explain how to create a build from your locally build
templates, and upload it to the shared repository. It is assumed that you have
already performed a build and tested it to your satisfaction.

You will need to be logged into amazon, so run `amazon-auth` and enter your MFA
code, if you have not already done so:

```sh
misc/amazon-auto
```

Your builds will be named after your deployment, and you will need to add a
unique identifier to them. For example, start with 1, and increment by 1 for
each new build. This then needs specifying when you run the build script:

```sh
./run-ansible playbooks/build-up.yml --extra-vars "local_build_seq=1"
```

This performs the following steps:

* Download or update the build repository from S3
* Pack each of your local templates into the build repostiory
* Upload the changes to the build repository to S3

Please note, this will take a long time if you have never downloaded the build
repository before, since this is several gigabytes in size. After the initial
download, it will be updated incrementally. The repository size will grow very
slowly, due to the very efficient deduplication performed by ZBackup.

Your builds are now ready to be deployed to other environments. The name of the
build will be your deployment name, then a hyphen, then the local build id you
provided on the command line, for example: `berk-1`, if your deployment name is
`berk` and you provided a local build sequence of `1`.
