{{ ansible_warning ['#'] }}

# ---------- basic configuration

[hekad]
maxprocs = 4
poolsize = 8192
base_dir = "{{ heka_target }}/var/cache"
share_dir = "{{ heka_target }}/share/heka"

#[dashboard]
#type = "DashboardOutput"
#address = ":4352"
#ticker_interval = 15

# ---------- read local log files

[input-syslog]
type = "LogstreamerInput"
log_directory = "/var/log"
file_match = "syslog"
decoder = "decode-syslog"

[decode-syslog]
type = "ScribbleDecoder"

	[decode-syslog.message_fields]
	Category = "system"

[input-auth]
type = "LogstreamerInput"
log_directory = "/var/log"
file_match = "auth.log"
decoder = "decode-auth"

[decode-auth]
type = "ScribbleDecoder"

	[decode-auth.message_fields]
	Category = "system"

{% for nginx_log_type in [ 'access', 'error', 'times' ] %}

[input-nginx-{{ nginx_log_type }}]
type = "LogstreamerInput"
log_directory = "/var/log/nginx"
file_match = "{{ nginx_log_type }}.log"
decoder = "decode-nginx-{{ nginx_log_type }}"

[decode-nginx-{{ nginx_log_type }}]
type = "ScribbleDecoder"

	[decode-nginx-{{ nginx_log_type }}.message_fields]
	Category = "nginx-{{ nginx_log_type }}"

{% endfor %}

# ---------- accept remote connections

[input-socket]
type = "TcpInput"
address = ":5565"
keep_alive = true
keep_alive_period = 60

# ---------- forward to master servers

{% for zone in [ 'a', 'b', 'c' ] %}
{% if zone != instance_zone %}

[output-admin-{{ zone }}]
type = "TcpOutput"
address = "wistla-{{ cluster_name }}-admin-{{ zone }}:5565"
keep_alive = true
keep_alive_period = 60
use_buffering = true
message_matcher = 'Hostname == "{{ inventory_hostname }}"'

{% endif %}
{% endfor %}

# ---------- write local log files

[output-system-log]
type = "FileOutput"
path = "/var/log/cluster-system.log"
message_matcher = 'Fields[Category] == "system"'
encoder = "encoder-simple"

[output-wistla-api-log]
type = "FileOutput"
path = "/var/log/cluster-wistla-api.log"
message_matcher = 'Fields[Category] == "wistla-api"'
encoder = "encoder-simple"

[output-wistla-browser-log]
type = "FileOutput"
path = "/var/log/cluster-wistla-browser.log"
message_matcher = 'Fields[Category] == "wistla-browser"'
encoder = "encoder-simple"

[output-wistla-web-log]
type = "FileOutput"
path = "/var/log/cluster-wistla-web.log"
message_matcher = 'Fields[Category] == "wistla-web"'
encoder = "encoder-simple"

{% for nginx_log_type in [ 'access', 'error', 'times' ] %}

[output-nginx-{{ nginx_log_type }}-log]
type = "FileOutput"
path = "/var/log/cluster-nginx-{{ nginx_log_type }}.log"
message_matcher = 'Fields[Category] == "nginx-{{ nginx_log_type }}"'
encoder = "encoder-simple"

{% endfor %}

[encoder-simple]
type = "PayloadEncoder"
append_newlines = false

# ---------- icinga events

# TODO

{% if inventory_hostname in [
	'wistla-production-admin-a',
	'wistla-staging-admin-a-DISABLED',
] %}

# ---------- email events

[output-wistla-api-restart]
type = "SmtpOutput"
message_matcher = '{{ [
	'Fields[Category] == "wistla-api"',
	'Payload =~ / %% CONTAINER-PROCESS-CONTROL %% (START|STOP) %% /',
] | join (' && ') }}'
send_from = "heka@{{ cluster.super_domain }}"
send_to = [
	"notifications.production.warning@wistla.com",
	"support@wistla.zendesk.com",
]
subject = "Wistla API restart notifications"
send_interval = 60
encoder = "encoder-simple"

[output-wistla-fatal]
type = "SmtpOutput"
message_matcher = '{{ [
	'(' + [
		'Fields[Category] == "wistla-api"',
		'Fields[Category] == "wistla-browser"',
		'Fields[Category] == "wistla-web"',
	] | join (' || ') + ')',
	'Payload =~ /[{,]"level":[6-9][0-9][},]/',
] | join (' && ') }}'
send_from = "heka@{{ cluster.super_domain }}"
send_to = [
	"notifications.production.warning@wistla.com",
	"support@wistla.zendesk.com",
]
subject = "Wistla fatal logging notifications"
send_interval = 60
encoder = "encoder-simple"

{% endif %}

# ex: noet ts=4 filetype=toml
