---

- name: "issue gridlinker admin certificate"
  when: "gridlinker_admin_certificate is not defined"
  register: "gridlinker_admin_certificate_result"
  action:

    module: "certificate_authority_issue"
    authority: "{{ gridlinker_admin_authority }}"
    common_name: "{{ gridlinker_admin_common_name }}"
    usage: "client"

- name: "store gridlinker admin certificate"
  when: "gridlinker_admin_certificate_result | changed"
  update_resource:

    gridlinker_admin.certificate: "{{
      gridlinker_admin_certificate_result.certificate
    }}"

    gridlinker_admin.private_key: "{{
      gridlinker_admin_certificate_result.private_key
    }}"

- name: "install gridlinker admin system packages"
  with_items: "gridlinker_admin_system_packages"
  become: "yes"
  action:

    module: "apt"
    name: "{{ item }}"

- name: "checkout gridlinker admin project"
  action:

    module: "git"
    repo: "{{ gridlinker_admin_repository }}"
    version: "{{ gridlinker_admin_branch }}"
    dest: "{{ gridlinker_admin_target }}"

- name: "create gridlinker admin directories"
  with_items: "{{ gridlinker_admin_directories }}"
  action:

    module: "file"
    path: "{{ item.directory }}"
    state: "directory"
    mode: "{{ item.mode }}"

- name: "create gridlinker admin config templates"
  with_items: "{{ gridlinker_admin_config_templates }}"
  action:

    module: "template"
    dest: "{{ item.target }}"
    src: "{{ item.template }}"
    mode: "{{ item.mode }}"

- name: "create gridlinker admin credentials"
  with_items: "{{ gridlinker_admin_credentials }}"
  action:

    module: "copy"
    dest: "{{ item.target }}"
    content: "{{ lookup ('etcd', item.source) }}"
    mode: "{{ item.mode }}"

- name: "checkout gridlinker admin managed projects"
  with_items: "{{ gridlinker_admin_managed_projects }}"
  action:

    module: "git"
    dest: "{{ item.target }}"
    repo: "{{ item.repo }}"
    version: "{{ item.master_branch }}"

# ex: et ts=2 filetype=yaml
