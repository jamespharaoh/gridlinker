---

- name: "create nginx directories"
  with_items: "{{ nginx_config_directories }}"
  become: "yes"
  action:

    module: "file"
    path: "{{ item.directory }}"
    state: "directory"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"

- name: "cluster app nginx config"
  with_items:

    - target: "{{ nginx_config }}/dev-robots.txt"
      template: "cluster-app-dev-robots-txt"

    - target: "{{ nginx_config }}/nginx.conf"
      template: "cluster-app-nginx-config"

    - target: "{{ nginx_config }}/default.conf"
      template: "cluster-app-nginx-default-config"

    - target: "{{ nginx_config }}/deployments.conf"
      template: "cluster-app-nginx-deployments-config"

    - target: "{{ nginx_config }}/upstream.conf"
      template: "cluster-app-nginx-upstream-config"

  become: "yes"
  action:

    module: "template"
    dest: "{{ item.target }}"
    src: "{{ item.template }}"

- name: "cluster app nginx ssl config upload"
  become: "yes"
  action:

    module: "synchronize"
    dest: "{{ nginx_config }}/ssl/"
    src: "{{ WORK }}/cluster/{{ cluster_name }}/nginx/ssl/"

    recursive: "yes"
    perms: "yes"

- name: "write nginx htpasswd"
  become: "yes"
  action:

    module: "copy"
    dest: "{{ nginx_config }}/htpasswd"
    src: "{{ HOME }}/security/htpasswd"

    group: "www-data"
    mode: "0640"

- name: "set nginx.state to 'enabled'"
  when: "nginx_state == 'installed'"
  update_resource:

    nginx.state: "enabled"

# ex: et ts=2 filetype=yaml
