{{ ansible_warning ['#'] }}

{# ###################### utilities #}

{% set restrictions %}
{% for whitelist_ip in cluster.whitelist_ips %}
			allow {{ whitelist_ip.ip }}; # {{ whitelist_ip.name }}
{% endfor %}
			deny all;
{% endset %}

{# ###################### main config #}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 2048;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	keepalive_timeout 10m;
	keepalive_requests 1000;

	types_hash_max_size 2048;

	include {{ nginx_config }}/mime.types;
	default_type application/octet-stream;

	log_format times '{{ [
		'$time_iso8601',
		inventory_hostname,
		'$upstream_http_x_wistla_load_host',
		'$remote_addr',
		'$status',
		'$body_bytes_sent',
		'$request_time',
		'$request_method',
		'$scheme://$host$request_uri',
		'$server_protocol',
		'$http_x_wistla_client_request_id',
	] | join (' ') }}';

	access_log /var/log/nginx/access.log;
	access_log /var/log/nginx/times.log times;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";
	gzip_types {{ [
		'text/html',
		'application/json',
	] | join (' ') }};

	client_max_body_size 16m;

	proxy_connect_timeout 250ms;
	proxy_read_timeout 60s;
	proxy_send_timeout 60s;
	proxy_next_upstream {{ [
		'error',
		'timeout',
		'http_502',
		'http_503',
		'http_504',
	] | join (' ') }};
	proxy_http_version 1.1;
	proxy_set_header Connection "";

	set_real_ip_from 10.0.0.0/8;
	real_ip_header proxy_protocol;
	real_ip_recursive on;

{# ###################### upstream servers #}

#==============================================================================#

#
# upstream servers per deployment
#

{% for proxy_deployment_name in cluster.proxy_deployment_names %}
{% set proxy_deployment = deployments [proxy_deployment_name] %}
{% if proxy_deployment.type in [ 'alias', 'alias2', 'simple', 'simple2' ] %}
{% set proxy_deployment_cluster = clusters [proxy_deployment.cluster_name] %}

	upstream deployment-{{ proxy_deployment_name }} {

{% for index in proxy_deployment_cluster.instance_formation.app.indices %}
{% for zone in proxy_deployment_cluster.instance_formation.app.zones %}
		server {{ [
			[
				proxy_deployment_name,
				'load',
				zone,
				index,
			] | join ('-'),
			'fail_timeout=60s;',
		] | join (' ') }}
{% endfor %}
{% endfor %}

		keepalive 32;

	}

{% endif %}
{% endfor %}

{# ###################### default site for test #}

{% if cluster_name in [ 'test', 'staging', 'staging-2' ] %}

#==============================================================================#

#
# default site
#

	server {

		listen 80 default_server;
		listen 8080 proxy_protocol default_server;

		listen 443 ssl http2 default_server;
		listen 8443 ssl http2 proxy_protocol default_server;

		server_name {{ inventory_hostname }};

		ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
		ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

		location /hello {
			return 200;
		}

	}

{% endif %}

{# ###################### per-deployment macro #}

{% macro do_deployment (deployment, deployment_alias, target) %}

	# website redirect naked domain to www
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;

		server_name {{ deployment.main_domain }};

		ssl_certificate {{ nginx_config }}/ssl/{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/{{ deployment_alias.main_domain }}.key;

		return 301 https://www.{{ deployment.main_domain }}$request_uri;

	}

	# website redirect http to https
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		server_name www.{{ deployment.main_domain }};

		return 301 https://www.{{ deployment.main_domain }}$request_uri;

	}

	# website
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;

		server_name www.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_config }}/ssl/{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/{{ deployment_alias.main_domain }}.key;

		add_header Strict-Transport-Security "max-age={{ 60 * 60 * 24 * 365 }}";

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /keystone {

			auth_basic "Restricted";
			auth_basic_user_file {{ nginx_config }}/htpasswd;

			proxy_pass http://deployment-{{ target }}/keystone;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

{% if deployment.robots_override_main | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}
{% endif %}

	}

	# api
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

{% if deployment.default | default ('no') == 'yes' %}
		listen 80 default_server;
		listen 8080 proxy_protocol default_server;

		listen 443 ssl http2 default_server;
		listen 8443 ssl http2 proxy_protocol default_server;
{% else %}
		listen 80;
		listen 8080 proxy_protocol;

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;
{% endif %}

		server_name api.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_config }}/ssl/api.{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/api.{{ deployment_alias.main_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "api.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "api.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}

	}

	# admin redirect http to https
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		server_name admin.{{ deployment.main_domain }};

		return 301 https://admin.{{ deployment.main_domain }}$request_uri;

	}

	# api
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;

		server_name admin.{{ deployment.main_domain }};

		ssl_certificate {{ nginx_config }}/ssl/admin.{{ deployment_alias.main_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/admin.{{ deployment_alias.main_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "admin.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "admin.{{ deployment.main_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}

	}

	# short redirect http to https
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		server_name {{ deployment.short_domain }};
		server_name www.{{ deployment.short_domain }};

		return 301 https://{{ deployment.short_domain }}$request_uri;

	}

	# short
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;

		server_name {{ deployment.short_domain }};

		ssl_certificate {{ nginx_config }}/ssl/{{ deployment_alias.short_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/{{ deployment_alias.short_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.short_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.short_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

{% if deployment.robots_override_short | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}
{% endif %}

	}

	# assets redirect http to https
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		server_name {{ deployment.assets_domain }};
		server_name www.{{ deployment.assets_domain }};

		return 301 https://{{ deployment.assets_domain }}$request_uri;

	}

	# assets
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 443 ssl http2;
		listen 8443 ssl http2 proxy_protocol;

		server_name {{ deployment.assets_domain }};

		ssl_certificate {{ nginx_config }}/ssl/{{ deployment_alias.assets_domain }}.cert;
		ssl_certificate_key {{ nginx_config }}/ssl/{{ deployment_alias.assets_domain }}.key;

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

{% if deployment.robots_override_assets | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}
{% endif %}

	}

	# assets origin
	#
	# deployment: {{ deployment.name }}
{% if deployment_alias.name != deployment.name %}
	# deployment alias: {{ deployment_alias.name }}
{% endif %}
	# target: {{ target }}

	server {

		listen 80;
		listen 8080 proxy_protocol;

		server_name {{ deployment.assets_origin_domain }};

		location / {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_origin_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

		}

		location /TEST {

			proxy_pass http://deployment-{{ target }};
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host "{{ deployment.assets_origin_domain }}";
			proxy_set_header X-Wistla-Entry-Region "{{ region_code }}";

{{ restrictions }}

		}

{% if deployment.robots_override_assets | default ('no') != 'yes' %}
		location /robots.txt {
			alias {{ nginx_config }}/dev-robots.txt;
		}
{% endif %}

	}

{% endmacro %}

{# ###################### iterate deployments #}

{% for proxy_deployment_name in cluster.proxy_deployment_names %}
{% set proxy_deployment = deployments [proxy_deployment_name] %}

{% if proxy_deployment.type in [ 'shared', 'shared2' ] %}

#==============================================================================#

#
# shared deployment {{ proxy_deployment.name }}
#
# main domain: {{ proxy_deployment.main_domain }}
# short domain: {{ proxy_deployment.short_domain }}
# target: {{ proxy_deployment.target }}
#

{{ do_deployment (
	proxy_deployment,
	proxy_deployment,
	proxy_deployment.target) }}

{% elif deployment.type in [ 'alias', 'alias2' ] %}
{% set proxy_deployment_alias = deployments [proxy_deployment.alias] %}

#==============================================================================#

#
# deployment alias {{ proxy_deployment_name }}
#
# main domain: {{ proxy_deployment.main_domain }}
# short domain: {{ proxy_deployment.short_domain }}
#
# alias name: {{ proxy_deployment.alias }}
# main domain: {{ proxy_deployment_alias.main_domain }}
# short domain: {{ proxy_deployment_alias.short_domain }}
#

{{ do_deployment (
	proxy_deployment,
	proxy_deployment_alias,
	proxy_deployment_name) }}

{% elif proxy_deployment.type in [ 'simple', 'simple2' ] %}

#==============================================================================#

#
# simple deployment {{ proxy_deployment_name }}
#
# main domain: {{ proxy_deployment.main_domain }}
# short domain: {{ proxy_deployment.short_domain }}
#

{{ do_deployment (
	proxy_deployment,
	proxy_deployment,
	proxy_deployment_name) }}

{% endif %}

{% endfor %}

{# ###################### close file #}

}

# ex: noet ts=4 filetype=nginx
