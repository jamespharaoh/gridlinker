{% set cluster_active_deployment = deployments [cluster_active_deployment_name] %}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";

	upstream temp {
		server {{ cluster_active_deployment.bridge_network }}.5.0;
		server {{ cluster_active_deployment.bridge_network }}.5.1;
		server {{ cluster_active_deployment.bridge_network }}.5.2;
	}

{% for deployment_name in cluster_deployment_names %}
{% set deployment = deployments [deployment_name] %}
	upstream deployment-{{ deployment_name }} {
		server {{ deployment.bridge_network }}.5.{{ idx }};
	}
{% endfor %}

	# website redirect naked domain to www

	server {

		listen 80;
		listen 443 ssl;

		server_name {{ cluster_domain }};

		ssl_certificate /etc/nginx/ssl/{{ cluster_domain }}.cert;
		ssl_certificate_key /etc/nginx/ssl/{{ cluster_domain }}.key;

		return 301 https://www.{{ cluster_domain }}$request_uri;

	}

	# website redirect http to https

	server {

		listen 80;

		server_name www.{{ cluster_domain }};

		return 301 https://www.{{ cluster_domain }}$request_uri;

	}

	# website

	server {

		listen 443 ssl;

		server_name www.{{ cluster_domain }};

		ssl_certificate /etc/nginx/ssl/{{ cluster_domain }}.cert;
		ssl_certificate_key /etc/nginx/ssl/{{ cluster_domain }}.key;

		add_header Strict-Transport-Security "max-age={{ 60 * 60 * 24 * 365 }}";

		location / {
			proxy_pass http://deployment-{{ cluster_active_deployment_name }};
			proxy_set_header Host "{{ cluster_domain }}";
		}

		location /keystone {
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/htpasswd;
			proxy_pass http://deployment-{{ cluster_active_deployment_name }}/keystone;
			proxy_set_header Host "{{ cluster_domain }}";
		}

{% if cluster != 'production' %}
		location /robots.txt {
			alias /etc/nginx/dev-robots.txt;
		}
{% endif %}

	}

	# api

	server {

		listen 80;
		listen 443 ssl;

		server_name api.{{ cluster_domain }};

		ssl_certificate /etc/nginx/ssl/api.{{ cluster_domain }}.cert;
		ssl_certificate_key /etc/nginx/ssl/api.{{ cluster_domain }}.key;

		location / {
			proxy_pass http://deployment-{{ cluster_active_deployment_name }};
			proxy_set_header Host "api.{{ cluster_domain }}";
		}

		location /robots.txt {
			alias /etc/nginx/dev-robots.txt;
		}

	}

}
