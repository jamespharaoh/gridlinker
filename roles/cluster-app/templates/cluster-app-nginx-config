user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";

# ----- upstream servers per deployment -----

{% for deployment_name in cluster_deployment_names %}
{% set deployment = deployments [deployment_name] %}
	upstream deployment-{{ deployment_name }} {
		server {{ deployment.bridge_network }}.5.{{ idx }};
	}
{% endfor %}

{% macro do_deployment (domain, certificate, target) %}

	# website redirect naked domain to www

	server {

		listen 80;
		listen 443 ssl;

		server_name {{ domain }};

		ssl_certificate /etc/nginx/ssl/{{ certificate }}.cert;
		ssl_certificate_key /etc/nginx/ssl/{{ certificate }}.key;

		return 301 https://www.{{ domain }}$request_uri;

	}

	# website redirect http to https

	server {

		listen 80;

		server_name www.{{ domain }};

		return 301 https://www.{{ domain }}$request_uri;

	}

	# website

	server {

		listen 443 ssl;

		server_name www.{{ domain }};

		ssl_certificate /etc/nginx/ssl/{{ certificate }}.cert;
		ssl_certificate_key /etc/nginx/ssl/{{ certificate }}.key;

		add_header Strict-Transport-Security "max-age={{ 60 * 60 * 24 * 365 }}";

		location / {
			proxy_pass http://deployment-{{ target }};
			proxy_set_header Host "{{ domain }}";
		}

		location /keystone {
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/htpasswd;
			proxy_pass http://deployment-{{ target }}/keystone;
			proxy_set_header Host "{{ domain }}";
		}

{% if cluster != 'production' %}
		location /robots.txt {
			alias /etc/nginx/dev-robots.txt;
		}
{% endif %}

	}

	# api

	server {

		listen 80;
		listen 443 ssl;

		server_name api.{{ domain }};

		ssl_certificate /etc/nginx/ssl/api.{{ certificate }}.cert;
		ssl_certificate_key /etc/nginx/ssl/api.{{ certificate }}.key;

		client_max_body_size 16m;

		location / {
			proxy_pass http://deployment-{{ target }};
			proxy_set_header Host "api.{{ domain }}";
		}

		location /robots.txt {
			alias /etc/nginx/dev-robots.txt;
		}

	}

	# admin redirect http to https

	server {

		listen 80;

		server_name admin.{{ domain }};

		return 301 https://admin.{{ domain }}$request_uri;

	}

	# api

	server {

		listen 443 ssl;

		server_name admin.{{ domain }};

		ssl_certificate /etc/nginx/ssl/admin.{{ certificate }}.cert;
		ssl_certificate_key /etc/nginx/ssl/admin.{{ certificate }}.key;

		client_max_body_size 16m;

		location / {
			proxy_pass http://deployment-{{ target }};
			proxy_set_header Host "admin.{{ domain }}";
		}

		location /robots.txt {
			alias /etc/nginx/dev-robots.txt;
		}

	}

{% endmacro %}

{% for deployment_alias in deployment_aliases
	if deployment_alias.cluster == cluster %}

# ----- deployment alias {{ deployment_alias.name }} -----
#
# domain: {{ deployment_alias.domain }}
# target: {{ deployment_alias.target }}
#

{{ do_deployment (
	deployment_alias.domain,
	deployment_alias.domain,
	deployment_alias.target) }}

{% endfor %}

{% for deployment_name, deployment in deployments.items ()
	if (deployment.cluster | default ('none')) == cluster %}

# ----- deployment {{ deployment_name }} -----
#
# private domain: {{ deployment.private_domain }}
# public domain: {{ deployment.public_domain }}
#

{{ do_deployment (
	deployment.private_domain,
	deployment.public_domain,
	deployment_name) }}

{% endfor %}

}
