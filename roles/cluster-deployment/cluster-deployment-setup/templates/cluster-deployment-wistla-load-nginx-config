{{ ansible_warning ['#'] }}

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	# basic settings

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# logging

	log_format times '{{ [
		'$time_iso8601',
		inventory_hostname,
		'$status',
		'$body_bytes_sent',
		'$request_time',
		'$request_method',
		'$scheme://$host$request_uri',
		'$server_protocol',
		'$http_x_wistla_client_request_id',
	] | join (' ') }}';

	access_log /shared/log/load-nginx-access.log;
	access_log /shared/log/load-nginx-times.log times;
	error_log /shared/log/load-nginx-error.log;

	# compression

	gzip on;
	gzip_disable "msie6";

	# proxy defaults

	proxy_connect_timeout 1s;
	proxy_read_timeout 60s;
	proxy_next_upstream {{ [
		'error',
		'timeout',
		'http_502',
		'http_503',
		'http_504',
	] | join (' ') }};

	add_header X-Wistla-Load-Host $hostname;
	add_header X-Wistla-Load-Port $server_port;
	# TODO: add always (requires nginx 1.7.5)

	# upstream servers

	{%- macro upstream (name, port) -%}

		{%- print '\n' -%}

		{%- print '\tupstream ', name, ' {\n' -%}

		{%- for node_index
		in range (0, cluster_deployment.node_instance_count [name] | int) -%}

			{%- print
				'\t\tserver ',
				[
					cluster_deployment_name,
					name,
					instance_zone,
					instance_index,
				] | join ('-'),
				':',
				port + node_index,
				' fail_timeout=15s max_fails=1;\n'
			-%}

		{%- endfor -%}

		{%- print '\t}\n' -%}

	{%- endmacro -%}

{% if cluster_deployment.type in [ 'alias', 'simple' ] %}
	{{ upstream ('api', 7000) }}
	{{ upstream ('browser', 3000) }}
{% endif %}

{% if cluster_deployment.type in [ 'alias2', 'simple2' ] %}
	{{ upstream ('api2', 3000) }}
{% endif %}

	# api

	server {

		listen 80;

		server_name {{ cluster_deployment.api_domain }};

		server_name api.{{ inventory_hostname }};

{% if cluster_deployment.type == 'alias' %}
		server_name {{ cluster_deployment_alias.api_domain }};
{% endif %}

		client_max_body_size 16m;

{% if cluster_deployment.type in [ 'alias', 'simple' ] %}

		location / {
			proxy_pass http://api;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_connect_timeout 10ms;
		}

{% endif %}

{% if cluster_deployment.type in [ 'alias2', 'simple2' ] %}

		location /v2 {

			proxy_pass http://api2;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_connect_timeout 10ms;

{% if 'cors_whitelist_origins' in cluster_deployment %}

			add_header Access-Control-Allow-Origin "{{
				cluster_deployment.cors_whitelist_origins | join (', ')
			}}";

			add_header Access-Control-Allow-Methods "{{ [
				'OPTIONS',
				'GET',
				'POST',
			] | join (', ') }}";

			add_header Access-Control-Allow-Headers "{{ [
				'Authorization',
				'Cache-Control',
				'Content-Accept',
				'Content-Type',
				'DNT',
				'If-Modified-Since',
				'Keep-Alive',
				'User-Agent',
				'X-Requested-With',
			] | join (', ') }}";

			add_header Access-Control-Max-Age {{ 60 * 60 * 24 * 7 }};

			add_header Access-Control-Allow-Credentials true;

{% endif %}

		}

		location /hello {
			proxy_pass http://api2/v2/hello;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_connect_timeout 10ms;
		}

{% endif %}

{% if cluster_deployment.test_routes_enabled != 'yes' %}

		# block test routes

		location /TEST {
			deny all;
		}

{% endif %}

	}

	# web

	server {

		listen 80;

		server_name {{ cluster_deployment.web_domain }};
		server_name {{ cluster_deployment.main_domain }};

		server_name web.{{ inventory_hostname }};

{% if cluster_deployment.type in [ 'alias', 'alias2' ] %}
		server_name {{ cluster_deployment_alias.web_domain }};
		server_name {{ cluster_deployment_alias.main_domain }};
{% endif %}

		client_max_body_size 16m;

		location = / {
			proxy_pass {{ cluster_deployment.web_upstream }}/index.html;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location / {
			proxy_pass {{ cluster_deployment.web_upstream }}$request_uri;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

{% if cluster_deployment.type in [ 'alias', 'simple' ] %}
		location /in {
			proxy_pass http://browser;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /analytics {
			proxy_pass http://api;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}
{% endif %}

	}

	# admin

	server {

		listen 80;

		server_name {{ cluster_deployment.admin_domain }};

{% if cluster_deployment.type in [ 'alias', 'alias2' ] %}
		server_name {{ cluster_deployment_alias.admin_domain }};
{% endif %}

		root /home/ubuntu/wistla-admin;

		location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
			expires max;
			log_not_found off;
		}

		location / {
			try_files $uri /index.html;
		}

	}

	# short

	server {

		listen 80;

		server_name {{ cluster_deployment.short_domain }};

		server_name short.{{ inventory_hostname }};

{% if cluster_deployment.type in [ 'alias', 'alias2' ] %}
		server_name {{ cluster_deployment_alias.short_domain }};
{% endif %}

		location = / {
			return 307 https://{{ cluster_deployment_alias.main_domain }}/;
		}

{% if cluster_deployment.type in [ 'alias', 'simple' ] %}
		location /robots.txt {
			alias /home/ubuntu/wistla-browser/static/robots.txt;
		}

		location / {
			proxy_pass http://browser/in/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /v/ {
			proxy_pass http://browser/in/registration/verification/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /analytics {
			proxy_pass http://api;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}
{% endif %}

	}

	# assets

	server {

		listen 80;

		server_name {{ cluster_deployment.assets_domain }};
		server_name {{ cluster_deployment.assets_origin_domain }};

		server_name assets.{{ inventory_hostname }};

{% if cluster_deployment.type in [ 'alias', 'alias2' ] %}
		server_name {{ cluster_deployment_alias.assets_domain }};
		server_name {{ cluster_deployment_alias.assets_origin_domain }};
{% endif %}

		expires max;

		location = /robots.txt {
			alias /etc/nginx/robots-txt-assets;
		}

{% for location_char in [ '1', '2' ] %}
{% if cluster_deployment.type in [ 'alias', 'simple' ] %}

		location /{{ location_char }}/images/ {
			proxy_pass http://api/images/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /{{ location_char }}/audio/ {
			proxy_pass http://api/audio/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

		location /{{ location_char }}/video/ {
			proxy_pass http://api/video/;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
		}

{% endif %}
{% endfor %}

		location /api/emails/ {
			alias /home/ubuntu/content-api/emails/;
		}

		location /browser/assets/ {
			alias /home/ubuntu/content-browser/assets/;
		}

		location /browser/fonts/ {
			alias /home/ubuntu/content-browser/fonts/;
		}

		location /common/emails/assets/ {
			alias /home/ubuntu/content-common/emails/assets/;
		}

		location /common/favicon/ {
			alias /home/ubuntu/content-common/favicon/;
		}

		location /web/assets/ {
			alias /home/ubuntu/content-web/assets/;
		}

		location /web/videos/ {
			alias /home/ubuntu/content-web/videos/;
		}

		location /web/fonts/ {
			alias /home/ubuntu/content-web/fonts/;
		}

{% if cluster_deployment.type in [ 'alias2', 'simple2' ] %}
		location ~ ^/v2/media/([0-9A-Z]+)-size-([0-9]+)-ar-([0-9]+:[0-9]+)$ {
			proxy_pass http://api2/v2/media/$1?size=$2&ar=$3;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_connect_timeout 10ms;
		}
{% endif %}

	}

}
