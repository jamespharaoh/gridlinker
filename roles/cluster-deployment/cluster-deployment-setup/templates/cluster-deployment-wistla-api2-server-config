---

{% if 'data' in cluster.instance_formation %}
{% set data_zones = cluster.instance_formation.data.zones %}
{% set data_indices = cluster.instance_formation.data.indices %}
{% else %}
{% set data_zones = cluster.instance_formation.app.zones %}
{% set data_indices = cluster.instance_formation.app.indices %}
{% endif %}

# @wistla/db configuration
  db:

    pg:
      url: "postgres://vagrant@{{ cluster_deployment_alias.name }}-postgresql-main-a-4/wistla"

      cache:
        url: "postgres://vagrant@{{ cluster_deployment_alias.name }}-postgresql-cache-a-4/wistla"

      main:
        url: "postgres://vagrant@{{ cluster_deployment_alias.name }}-postgresql-main-a-4/wistla"

# @wistla/pubsub configuration
  pubsub:
    amqp:
      rest_api: null
      urls:
{%  for zone in data_zones %}
{%  for instance in data_indices %}
        - {{ ['amqp://', cluster_deployment.rabbit_api_user, ':', cluster_deployment.rabbit_api_password, '@', cluster_deployment_alias.name, '-rabbit-', zone, '-', instance, ] | join }}
{%  endfor %}
{%  endfor %}

# @wistla/api-server
  # logger information
  log:

    level: "trace"
    time_level: "trace"

# @wistla/blob configuration
  blob:
    mode: remote_stream
    stream:
      chunk_size: 5242880
      concurrency: 1
    remote_credentials:
      access_key: "{{ cluster_deployment.aws_s3_access_key }}"
      bucket_name: "{{ cluster_deployment.aws_s3_bucket_name }}"
      region: "{{ cluster_deployment.aws_s3_region }}"
      secret_key: "{{ cluster_deployment.aws_s3_secret_key }}"

# ex: et ts=2 filetype=yaml
