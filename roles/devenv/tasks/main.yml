---

- set_fact:

    config_directories:

      - "config"
      - "config/api"
      - "config/browser"
      - "config/load"
      - "config/mongo"
      - "config/rabbit"
      - "config/web"

    config_files:

      - source: "security/apple/push-notifications/ca.cert"
        type: "api"
        target: "apple-ca.cert"

      - source: "security/apple/push-notifications/{{ dev_apple_push_notifications_name | default ('null') }}.cert"
        type: "api"
        target: "apple-push.cert"

    config_secrets:

      - source: "security/test/google-service-account.key"
        type: "api"
        target: "google-service-account.key"

      - source: "security/apple/push-notifications/{{ dev_apple_push_notifications_name | default ('null') }}.key"
        type: "api"
        target: "apple-push.key"

    config_templates:

      - template: "devenv-wistla-admin-config"
        type: "load"
        target: "wistla-admin-config.local.js"

      - template: "devenv-wistla-api-config"
        type: "api"
        target: "config.local.js"

      - template: "devenv-wistla-browser-config"
        type: "browser"
        target: "config.local.js"

      - template: "devenv-wistla-web-config"
        type: "web"
        target: "config.local.js"

      - template: "devenv-wistla-load-upstream"
        type: "load"
        target: "nginx-upstream.conf"

    config_links:

      - src: "../../config/api/apple-ca.cert"
        dest: "wistla-api/config/apple-ca.cert"

      - src: "../../config/api/apple-push.cert"
        dest: "wistla-api/config/apple-push.cert"

      - src: "../../config/api/apple-push.key"
        dest: "wistla-api/config/apple-push.key"

      - src: "../../config/api/config.local.js"
        dest: "wistla-api/config/config.local.js"

      - src: "../../config/api/google-service-account.key"
        dest: "wistla-api/config/google-service-account.key"

      - src: "../../config/browser/config.local.js"
        dest: "wistla-browser/config/config.local.js"

      - src: "../../config/load/wistla-admin-config.local.js"
        dest: "wistla-admin/config/config.local.js"

      - src: "../../config/web/config.local.js"
        dest: "wistla-web/config/config.local.js"

    shared_directories:

      - "shared"
      - "shared/audio"
      - "shared/cms-image"
      - "shared/image"
      - "shared/log"
      - "shared/user-upload"
      - "shared/video"

- name: "checkout projects from git"
  shell:

    set -e;

    cd {{ deployment_home }};

    git clone
      git@github.com:/wistla/{{ item.name }}
      --branch {{ item.branch }};

  args:
    creates: "{{ deployment_home }}/{{ item.name }}"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "devenv_checkouts"
  when: "deployment_mode == 'vagrant'"

- name: "run build steps"
  shell: "{{ item.build_steps | default (['true']) | join (' && ') }}"
  args:
    chdir: "{{ deployment_home }}/{{ item.name }}"
    creates: "{{ deployment_home }}/{{ item }}/node_modules"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "devenv_checkouts"
  tags: "build"

- name: "create git pre-commit hooks"
  action:
    module: "template"
    src: "devenv-git-hook-pre-commit"
    dest: "{{ deployment_home }}/{{ item.name }}/.git/hooks/pre-commit"
    mode: "0755"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "devenv_checkouts"
  when: "deployment_mode == 'vagrant'"

- name: "create git post-checkout hooks"
  action:
    module: "template"
    src: "devenv-git-hook-post-checkout"
    dest: "{{ deployment_home }}/{{ item.name }}/.git/hooks/post-checkout"
    mode: "0755"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "devenv_checkouts"
  when: "deployment_mode == 'vagrant'"

- name: "create shared directories"
  action:
    module: "file"
    path: "{{ deployment_home }}/{{ item }}"
    state: "directory"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "shared_directories"

- name: "create config directories"
  action:
    module: "file"
    path: "{{ deployment_home }}/{{ item }}"
    state: "directory"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "config_directories"

- name: "create config files"
  action:
    module: "template"
    src: "{{ item.template }}"
    dest: "{{ deployment_home }}/config/{{ item.type }}/{{ item.target }}"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "config_templates"

- name: "copy config files"
  action:
    module: "copy"
    src: "{{ item.source }}"
    dest: "{{ deployment_home }}/config/{{ item.type }}/{{ item.target }}"
    mode: "0644"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "config_files"

- name: "copy config secrets"
  action:
    module: "copy"
    src: "{{ item.source }}"
    dest: "{{ deployment_home }}/config/{{ item.type }}/{{ item.target }}"
    mode: "0600"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  when: "'dev' in secrets"
  with_items: "config_secrets"

- name: "create links to config files"
  action:
    module: "file"
    path: "{{ deployment_home }}/{{ item.dest }}"
    src: "{{ item.src }}"
    state: "link"
    force: "yes"
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  with_items: "config_links"

- name: "create deployment name link"
  action:
    module: "file"
    path: "{{ deployment_home }}/{{ deployment }}"
    state: "link"
    src: "."
  sudo: "yes"
  sudo_user: "{{ deployment_user }}"
  when: "deployment_mode == 'vagrant'"

# ex: et ts=2 filetype=yaml
