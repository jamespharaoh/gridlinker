---

- set_fact:
    mysql_state: "synchronizing"
  when: "mysql_state == 'stopped'"

- name: "start master"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo start mysql || true;

- name: "create mysql replication user"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  action:
    module: "mysql_user"
    name: "{{ mysql_replication_user }}"
    host: "%"
    password: "{{ mysql_replication_password }}"
    priv: "*.*:REPLICATION SLAVE"

- name: "get replication info from master"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  register: "mysql_master_status"
  shell:

    set -euf -o pipefail;

    mysql --skip-column-names --execute "
      SET GLOBAL innodb_fast_shutdown=0;
      FLUSH TABLES WITH READ LOCK;
      SHOW MASTER STATUS;
    " | sudo tee /tmp/mysql-master-status &

    sleep 0.1;

    test -s /tmp/mysql-master-status;

- name: "save replication info from master"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  delegate_to: "localhost"
  args:
    chdir: "../.."
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    echo "{{ mysql_master_status.stdout.split ('\t') [0] }}"
      >work/mysql-master-status-log-file;

    echo "{{ mysql_master_status.stdout.split ('\t') [1] }}"
      >work/mysql-master-status-log-position;

- name: "shut down master"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo stop mysql || true;

    sleep 0.1;

- name: "shut down slave"
  when: "inventory_hostname != mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo stop mysql || true;

- name: "synchronize data"
  when: "inventory_hostname != mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo rsync --archive --delete
    root@{{ mysql_master }}:/var/lib/mysql/
    /var/lib/mysql/;

- name: "start master"
  when: "inventory_hostname == mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo start mysql;

- name: "start slave"
  when: "inventory_hostname != mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    sudo start mysql;

- name: "configure replication"
  when: "inventory_hostname != mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    mysql --execute "

      CHANGE MASTER TO
      MASTER_HOST = '{{ mysql_master }}',
      MASTER_USER = '{{ mysql_replication_user }}',
      MASTER_PASSWORD = '{{ mysql_replication_password }}',
      MASTER_LOG_FILE = '{{ lookup ('file', '../../work/mysql-master-status-log-file') }}',
      MASTER_LOG_POS = {{ lookup ('file', '../../work/mysql-master-status-log-position') }};

    ";

- name: "start replication"
  when: "inventory_hostname != mysql_master and mysql_state == 'synchronizing'"
  args:
    executable: "/bin/bash"
  shell:

    set -euf -o pipefail;

    mysql --execute "
      START SLAVE;
    ";

- set_fact:
    mysql_state: "running"
  when: "mysql_state == 'synchronizing'"

# ex: et ts=2 filetype=yaml
