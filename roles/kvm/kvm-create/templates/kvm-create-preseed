{% set private_network = networks [private_network] %}

# localisation
d-i	debian-installer/locale	select	C
d-i	debian-installer/language string en
d-i debian-installer/country string GB
d-i localechooser/supported-locales string es_ES.UTF-8

# keyboard
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string gb

# network
d-i netcfg/choose_interface select eth0
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/get_ipaddress string {{ private_address }}
d-i netcfg/get_netmask string {{ private_network.network_netmask }}
d-i netcfg/get_gateway string {{ private_network.network_gateway }}
d-i netcfg/get_nameservers string {{ private_network.network_gateway }}
d-i netcfg/confirm_static boolean true
d-i netcfg/get_hostname string {{ identity_name }}
d-i netcfg/get_domain string {{ private_domain }}

# mirror
d-i mirror/country string manual
d-i mirror/http/hostname string {{ virtual_install_mirror_hostname }}
d-i mirror/http/directory string {{ virtual_install_mirror_directory }}
d-i mirror/http/proxy string

# timezone
d-i clock-setup/utc boolean true
d-i time/zone string Etc/UTC
d-i clock-setup/ntp boolean true

# partitioning
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string regular
d-i partman-auto/expert_recipe string \
	boot-root :: \
		32 32 32 free \
			$gptonly{ } \
			$primary{ } \
			$bios_boot{ } \
			method{ biosgrub } \
	. \
		100% 250 100% {{ virtual_storage_filesystem }} \
			$primary{ } \
			$bootable{ } \
			method{ format } \
			format{ } \
			use_filesystem{ } \
			filesystem{ {{ virtual_storage_filesystem }} } \
			mountpoint{ / } \
	.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman-basicfilesystems/default_label string gpt
d-i partman/choose_partition select finish
d-i partman-basicfilesystems/no_swap boolean false
d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm boolean true

# base system
d-i base-installer/install-recommends boolean false
d-i base-installer/kernel/image string {{ virtual_install_kernel_package }}

# user account
d-i passwd/root-login boolean false
d-i passwd/make-user bolean true
d-i passwd/user-fullname string Ubuntu User
d-i passwd/username string ubuntu
d-i passwd/user-password password ubuntu
d-i passwd/user-password-again password ubuntu
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false

# apt
d-i apt-setup/backports boolean true
d-i apt-setup/contrib boolean false
d-i apt-setup/multiverse boolean false
d-i apt-setup/non-free boolean false
d-i apt-setup/partner boolean false
d-i apt-setup/proposed boolean false
d-i apt-setup/restricted boolean false
d-i apt-setup/universe boolean false
d-i apt-setup/extras boolean false
d-i apt-setup/security_host string {{ virtual_install_security_hostname }}
d-i apt-setup/security_path string {{ virtual_install_security_directory }}

# packages
tasksel tasksel/first multiselect standard
d-i pkgsel/upgrade select none
d-i pkgsel/language-packs multiselect en, es
d-i pkgsel/update-policy select none
popularity-contest popularity-contest/participate boolean false
d-i pkgsel/updatedb boolean false
d-i pkgsel/include string aptitude openssh-server python

# grub
d-i grub-installer/skip boolean false
d-i lilo-installer/skip boolean true
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# other
d-i preseed/late_command string \
	echo "%sudo ALL=(ALL) NOPASSWD: ALL" >>/target/etc/sudoers; \
	mkdir -p /target/home/ubuntu/.ssh; \
{% for admin_user_name in groups ['admin-user'] %}
{% set admin_user = hostvars [admin_user_name] %}
{% for key in [ 'ssh_user_key_ecdsa', 'ssh_user_key_rsa' ] %}
{% if key in admin_user %}
		echo "{{ admin_user [key] }}" \
			>> /target/home/ubuntu/.ssh/authorized_keys; \
{% endif %}
{% endfor %}
{% endfor %}
	chown 1000:1000 \
		/target/home/ubuntu/.ssh \
		/target/home/ubuntu/.ssh/authorized_keys; \
{% if virtual_storage_filesystem == 'btrfs' %}
	btrfs quota enable /target; \
	btrfs quota rescan -w /target; \
{% endif %}
	sed -i '/^deb-src/s/^/#/' /etc/apt/sources.list; \
	sync;

# finish
d-i finish-install/reboot_in_progress note
d-i cdrom-detect/eject boolean false
d-i debian-installer/exit/poweroff boolean true
