---

- name: "deploy projects"
  tags: "quick"
  with_items: "{{ node_deploy_projects }}"
  register: "deploy_output"
  changed_when: "deploy_output.stdout != ''"
  delegate_to: "localhost"
  become: "yes"
  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    rsync
      --archive
      --delete
      --itemize-changes
      {{ deployment_home }}/{{ item.name }}/
      /var/lib/lxc/{{ inventory_hostname }}/rootfs/home/ubuntu/{{ item.name }}/
      --exclude /.git
      --exclude /node_modules
      --exclude /third-party
      {{
        item.excludes
        | default ([])
        | prepend_list ('--exclude ')
        | join (' ')
      }};

- name: "deploy projects node modules"
  with_items: "{{ node_deploy_projects }}"
  when: "item.type == 'nodejs'"
  register: "deploy_output"
  changed_when: "deploy_output.stdout != ''"
  delegate_to: "localhost"
  become: "yes"
  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    rsync
      --archive
      --delete
      --itemize-changes
      --include /node_modules
      --include /third-party
      --exclude /*
      {{ deployment_home }}/{{ item.name }}/
      /var/lib/lxc/{{ inventory_hostname }}/rootfs/home/ubuntu/{{ item.name }}/;

- name: "create init config"
  with_nested:

    - "{{ node_deploy_projects }}"

    - - template: "node-nodejs-upstart"
        target_suffix: ""

      - template: "node-nodejs-instance-upstart"
        target_suffix: "-instance"

  become: "yes"
  action:

    module: "template"
    dest: "/etc/init/{{ item.0.name }}{{ item.1.target_suffix }}.conf"
    src: "{{ item.1.template }}"

- name: "create links to config"
  with_items: "{{
    node_deploy_projects | flatten_hash ('configs')
  }}"
  action:

    module: "file"
    path: "/home/ubuntu/{{ item.outer.name }}/config/{{ item.configs.target }}"
    state: "link"
    src: "/config/{{ item.configs.source }}"
    force: "yes"

- name: "create other links"
  with_items: "{{
    node_deploy_projects | flatten_hash ('other_links')
  }}"
  action:

    module: "file"
    path: "/home/ubuntu/{{ item.outer.name }}/{{ item.other_links.link }}"
    state: "link"
    src: "{{ item.other_links.target }}"
    force: "yes"

# ex: et ts=2 filetype=yaml
