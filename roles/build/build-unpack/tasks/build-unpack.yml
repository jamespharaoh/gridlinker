---

- name: "build unpack server reindex"
  delegate_to: "localhost"
  run_once: "yes"
  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    rzbackup-client reindex
      "127.0.0.1:4152";

- name: "unpack build"
  delegate_to: "localhost"
  environment:

    build_target: "/var/lib/lxc/{{ inventory_hostname }}"

  args:

    executable: "/bin/bash"

  shell:

    set -euf -o pipefail;

    if ! test -d "$build_target"; then
      sudo mkdir "$build_target";
    fi;

    if test -e "$build_target/rootfs"; then
      sudo btrfs subvolume delete "$build_target/rootfs";
      sleep 1;
    fi;

    sudo btrfs subvolume create "$build_target/rootfs";

    if false; then

      {
        rzbackup-client restore
          "localhost:4152"
          "/{{ node_template }}-{{ deployment.deployed_build }}.tar";
      } | {
        sudo tar
          --extract
          --directory "$build_target/rootfs";
      };

    else

      {
        zbackup restore
          --password-file "{{ deployment_build_secret_path }}"
          --silent
          "/data/builds/backups/{{ node_template }}-{{ deployment.deployed_build }}.tar";
      } | {
        sudo tar
          --extract
          --directory "$build_target/rootfs";
      };

    fi;

- name: "create lxc config"
  delegate_to: "localhost"
  become: "yes"
  action:

    module: "template"
    dest: "/var/lib/lxc/{{ inventory_hostname }}/config"
    src: "lxc-config"

- name: "create shared dir"
  delegate_to: "localhost"
  become: "yes"
  action:

    module: "file"
    path: "/var/lib/lxc/{{ inventory_hostname }}/rootfs/shared"
    state: "directory"

- name: "create host data dir"
  delegate_to: "localhost"
  become: "yes"
  action:

    module: "file"
    path: "{{ deployment_home }}/shared/{{ inventory_hostname }}"
    state: "directory"

- name: "create host data dirs"
  with_items: "{{ data_dirs }}"
  delegate_to: "localhost"
  become: "yes"
  action:

    module: "file"
    path: "{{ deployment_home }}/shared/{{ inventory_hostname }}/{{ item.name }}"
    state: "directory"

    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"

- name: "create container data dirs"
  with_items: "{{ data_dirs }}"
  delegate_to: "localhost"
  become: "yes"
  action:

    module: "file"
    path: "/var/lib/lxc/{{ inventory_hostname }}/rootfs/{{ item.path }}"
    state: "directory"

# ex: et ts=2 filetype=yaml
